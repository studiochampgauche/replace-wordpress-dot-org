{"version":3,"file":"html-entities.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA,IAAIA,eAAe;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAEC,IAAI,EAAG;EACtC;EACA,IAAK,QAAQ,KAAK,OAAOA,IAAI,IAAI,CAAC,CAAC,KAAKA,IAAI,CAACC,OAAO,CAAE,GAAI,CAAC,EAAG;IAC7D,OAAOD,IAAI;EACZ;;EAEA;EACA,IAAKE,SAAS,KAAKJ,eAAe,EAAG;IACpC,IACCK,QAAQ,CAACC,cAAc,IACvBD,QAAQ,CAACC,cAAc,CAACC,kBAAkB,EACzC;MACDP,eAAe,GAAGK,QAAQ,CAACC,cAAc,CACvCC,kBAAkB,CAAE,EAAG,CAAC,CACxBC,aAAa,CAAE,UAAW,CAAC;IAC9B,CAAC,MAAM;MACNR,eAAe,GAAGK,QAAQ,CAACG,aAAa,CAAE,UAAW,CAAC;IACvD;EACD;EAEAR,eAAe,CAACS,SAAS,GAAGP,IAAI;EAChC,MAAMQ,OAAO,GAAGV,eAAe,CAACW,WAAW;EAC3CX,eAAe,CAACS,SAAS,GAAG,EAAE;;EAE9B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,qBAAwBC,OAAO;AACvC","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/html-entities/build-module/@wordpress/html-entities/src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/** @type {HTMLTextAreaElement} */\nlet _decodeTextArea;\n\n/**\n * Decodes the HTML entities from a given string.\n *\n * @param {string} html String that contain HTML entities.\n *\n * @example\n * ```js\n * import { decodeEntities } from '@wordpress/html-entities';\n *\n * const result = decodeEntities( '&aacute;' );\n * console.log( result ); // result will be \"รก\"\n * ```\n *\n * @return {string} The decoded string.\n */\nexport function decodeEntities( html ) {\n\t// Not a string, or no entities to decode.\n\tif ( 'string' !== typeof html || -1 === html.indexOf( '&' ) ) {\n\t\treturn html;\n\t}\n\n\t// Create a textarea for decoding entities, that we can reuse.\n\tif ( undefined === _decodeTextArea ) {\n\t\tif (\n\t\t\tdocument.implementation &&\n\t\t\tdocument.implementation.createHTMLDocument\n\t\t) {\n\t\t\t_decodeTextArea = document.implementation\n\t\t\t\t.createHTMLDocument( '' )\n\t\t\t\t.createElement( 'textarea' );\n\t\t} else {\n\t\t\t_decodeTextArea = document.createElement( 'textarea' );\n\t\t}\n\t}\n\n\t_decodeTextArea.innerHTML = html;\n\tconst decoded = _decodeTextArea.textContent;\n\t_decodeTextArea.innerHTML = '';\n\n\t/**\n\t * Cast to string, HTMLTextAreaElement should always have `string` textContent.\n\t *\n\t * > The `textContent` property of the `Node` interface represents the text content of the\n\t * > node and its descendants.\n\t * >\n\t * > Value: A string or `null`\n\t * >\n\t * > * If the node is a `document` or a Doctype, `textContent` returns `null`.\n\t * > * If the node is a CDATA section, comment, processing instruction, or text node,\n\t * >   textContent returns the text inside the node, i.e., the `Node.nodeValue`.\n\t * > * For other node types, `textContent returns the concatenation of the textContent of\n\t * >   every child node, excluding comments and processing instructions. (This is an empty\n\t * >   string if the node has no children.)\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n\t */\n\treturn /** @type {string} */ ( decoded );\n}\n"],"names":["_decodeTextArea","decodeEntities","html","indexOf","undefined","document","implementation","createHTMLDocument","createElement","innerHTML","decoded","textContent"],"sourceRoot":""}