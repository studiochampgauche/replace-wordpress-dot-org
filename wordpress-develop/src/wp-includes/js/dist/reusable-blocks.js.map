{"version":3,"file":"reusable-blocks.js","mappings":"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","sources":["webpack://wp/./node_modules/@wordpress/icons/build-module/library/@wordpress/icons/src/library/symbol.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/@wordpress/reusable-blocks/src/components/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/reusable-block-convert-button.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/reusable-blocks-manage-button.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/actions.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/selectors.js","webpack://wp/external window \"ReactJSXRuntime\"","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/@wordpress/reusable-blocks/src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","export { default as ReusableBlocksMenuItems } from './reusable-blocks-menu-items';\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport ReusableBlockConvertButton from './reusable-block-convert-button';\nimport ReusableBlocksManageButton from './reusable-blocks-manage-button';\n\nexport default function ReusableBlocksMenuItems( { rootClientId } ) {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { onClose, selectedClientIds } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<ReusableBlockConvertButton\n\t\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t/>\n\t\t\t\t\t{ selectedClientIds.length === 1 && (\n\t\t\t\t\t\t<ReusableBlocksManageButton\n\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { hasBlockSupport, isReusableBlock } from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useCallback, useState } from '@wordpress/element';\nimport {\n\tMenuItem,\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n} from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store } from '../../store';\n\n/**\n * Menu control to convert block(s) to reusable block.\n *\n * @param {Object}   props              Component props.\n * @param {string[]} props.clientIds    Client ids of selected blocks.\n * @param {string}   props.rootClientId ID of the currently selected top-level block.\n * @param {()=>void} props.onClose      Callback to close the menu.\n * @return {import('react').ComponentType} The menu control or null.\n */\nexport default function ReusableBlockConvertButton( {\n\tclientIds,\n\trootClientId,\n\tonClose,\n} ) {\n\tconst [ syncType, setSyncType ] = useState( undefined );\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst [ title, setTitle ] = useState( '' );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootId =\n\t\t\t\trootClientId ||\n\t\t\t\t( clientIds.length > 0\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: undefined );\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\tconst isReusable =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a reusable block.\n\t\t\t\t! isReusable &&\n\t\t\t\t// Hide when reusable blocks are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made reusable.\n\t\t\t\t\t\thasBlockSupport( block.name, 'reusable', true )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t// Blocks refers to the wp_block post type, this checks the ability to create a post of that type.\n\t\t\t\t!! canUser( 'create', {\n\t\t\t\t\tkind: 'postType',\n\t\t\t\t\tname: 'wp_block',\n\t\t\t\t} );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds, rootClientId ]\n\t);\n\n\tconst { __experimentalConvertBlocksToReusable: convertBlocksToReusable } =\n\t\tuseDispatch( store );\n\n\tconst { createSuccessNotice, createErrorNotice } =\n\t\tuseDispatch( noticesStore );\n\tconst onConvert = useCallback(\n\t\tasync function ( reusableBlockTitle ) {\n\t\t\ttry {\n\t\t\t\tawait convertBlocksToReusable(\n\t\t\t\t\tclientIds,\n\t\t\t\t\treusableBlockTitle,\n\t\t\t\t\tsyncType\n\t\t\t\t);\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t! syncType\n\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t\t\t__( 'Synced pattern created: %s' ),\n\t\t\t\t\t\t\t\treusableBlockTitle\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t\t\t__( 'Unsynced pattern created: %s' ),\n\t\t\t\t\t\t\t\treusableBlockTitle\n\t\t\t\t\t\t  ),\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tid: 'convert-to-reusable-block-success',\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} catch ( error ) {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tid: 'convert-to-reusable-block-error',\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tconvertBlocksToReusable,\n\t\t\tclientIds,\n\t\t\tsyncType,\n\t\t\tcreateSuccessNotice,\n\t\t\tcreateErrorNotice,\n\t\t]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<MenuItem icon={ symbol } onClick={ () => setIsModalOpen( true ) }>\n\t\t\t\t{ __( 'Create pattern' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Create pattern' ) }\n\t\t\t\t\tonRequestClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t} }\n\t\t\t\t\toverlayClassName=\"reusable-blocks-menu-items__convert-modal\"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tonConvert( title );\n\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ _x( 'Synced', 'pattern (singular)' ) }\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Sync this pattern across multiple locations.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tchecked={ ! syncType }\n\t\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\t\t\t\t! syncType ? 'unsynced' : undefined\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as reusableBlocksStore } from '../../store';\n\nfunction ReusableBlocksManageButton( { clientId } ) {\n\tconst { canRemove, isVisible, managePatternsUrl } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlock, canRemoveBlock, getBlockCount } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst reusableBlock = getBlock( clientId );\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlock( clientId ),\n\t\t\t\tisVisible:\n\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\tisReusableBlock( reusableBlock ) &&\n\t\t\t\t\t!! canUser( 'update', {\n\t\t\t\t\t\tkind: 'postType',\n\t\t\t\t\t\tname: 'wp_block',\n\t\t\t\t\t\tid: reusableBlock.attributes.ref,\n\t\t\t\t\t} ),\n\t\t\t\tinnerBlockCount: getBlockCount( clientId ),\n\t\t\t\t// The site editor and templates both check whether the user\n\t\t\t\t// has edit_theme_options capabilities. We can leverage that here\n\t\t\t\t// and omit the manage patterns link if the user can't access it.\n\t\t\t\tmanagePatternsUrl: canUser( 'create', {\n\t\t\t\t\tkind: 'postType',\n\t\t\t\t\tname: 'wp_template',\n\t\t\t\t} )\n\t\t\t\t\t? addQueryArgs( 'site-editor.php', {\n\t\t\t\t\t\t\tpath: '/patterns',\n\t\t\t\t\t  } )\n\t\t\t\t\t: addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t  } ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { __experimentalConvertBlockToStatic: convertBlockToStatic } =\n\t\tuseDispatch( reusableBlocksStore );\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<MenuItem href={ managePatternsUrl }>\n\t\t\t\t{ __( 'Manage patterns' ) }\n\t\t\t</MenuItem>\n\t\t\t{ canRemove && (\n\t\t\t\t<MenuItem onClick={ () => convertBlockToStatic( clientId ) }>\n\t\t\t\t\t{ __( 'Detach' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default ReusableBlocksManageButton;\n","/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport {\n\tcreateBlock,\n\tisReusableBlock,\n\tparse,\n\tserialize,\n} from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Returns a generator converting a reusable block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const __experimentalConvertBlockToStatic =\n\t( clientId ) =>\n\t( { registry } ) => {\n\t\tconst oldBlock = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlock( clientId );\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_block',\n\t\t\t\toldBlock.attributes.ref\n\t\t\t);\n\n\t\tconst newBlocks = parse(\n\t\t\ttypeof reusableBlock.content === 'function'\n\t\t\t\t? reusableBlock.content( reusableBlock )\n\t\t\t\t: reusableBlock.content\n\t\t);\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks( oldBlock.clientId, newBlocks );\n\t};\n\n/**\n * Returns a generator converting one or more static blocks into a pattern.\n *\n * @param {string[]}             clientIds The client IDs of the block to detach.\n * @param {string}               title     Pattern title.\n * @param {undefined|'unsynced'} syncType  They way block is synced, current undefined (synced) and 'unsynced'.\n */\nexport const __experimentalConvertBlocksToReusable =\n\t( clientIds, title, syncType ) =>\n\tasync ( { registry, dispatch } ) => {\n\t\tconst meta =\n\t\t\tsyncType === 'unsynced'\n\t\t\t\t? {\n\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\n\t\tconst reusableBlock = {\n\t\t\ttitle: title || __( 'Untitled pattern block' ),\n\t\t\tcontent: serialize(\n\t\t\t\tregistry\n\t\t\t\t\t.select( blockEditorStore )\n\t\t\t\t\t.getBlocksByClientId( clientIds )\n\t\t\t),\n\t\t\tstatus: 'publish',\n\t\t\tmeta,\n\t\t};\n\n\t\tconst updatedRecord = await registry\n\t\t\t.dispatch( 'core' )\n\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\tif ( syncType === 'unsynced' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\tref: updatedRecord.id,\n\t\t} );\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks( clientIds, newBlock );\n\t\tdispatch.__experimentalSetEditingReusableBlock(\n\t\t\tnewBlock.clientId,\n\t\t\ttrue\n\t\t);\n\t};\n\n/**\n * Returns a generator deleting a reusable block.\n *\n * @param {string} id The ID of the reusable block to delete.\n */\nexport const __experimentalDeleteReusableBlock =\n\t( id ) =>\n\tasync ( { registry } ) => {\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t\t// Don't allow a reusable block with a temporary ID to be deleted.\n\t\tif ( ! reusableBlock ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove any other blocks that reference this reusable block.\n\t\tconst allBlocks = registry.select( blockEditorStore ).getBlocks();\n\t\tconst associatedBlocks = allBlocks.filter(\n\t\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t\t);\n\t\tconst associatedBlockClientIds = associatedBlocks.map(\n\t\t\t( block ) => block.clientId\n\t\t);\n\n\t\t// Remove the parsed block.\n\t\tif ( associatedBlockClientIds.length ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( blockEditorStore )\n\t\t\t\t.removeBlocks( associatedBlockClientIds );\n\t\t}\n\n\t\tawait registry\n\t\t\t.dispatch( 'core' )\n\t\t\t.deleteEntityRecord( 'postType', 'wp_block', id );\n\t};\n\n/**\n * Returns an action descriptor for SET_EDITING_REUSABLE_BLOCK action.\n *\n * @param {string}  clientId  The clientID of the reusable block to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function __experimentalSetEditingReusableBlock( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_REUSABLE_BLOCK',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport * as actions from './actions';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/reusable-blocks';\n\n/**\n * Store definition for the reusable blocks namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\tactions,\n\treducer,\n\tselectors,\n} );\n\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingReusableBlock( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_REUSABLE_BLOCK' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingReusableBlock,\n} );\n","/**\n * Returns true if reusable block is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the reusable block is in the editing state.\n */\nexport function __experimentalIsEditingReusableBlock( state, clientId ) {\n\treturn state.isEditingReusableBlock[ clientId ];\n}\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport * from './components';\n"],"names":["SVG","Path","jsx","_jsx","symbol","xmlns","viewBox","children","d","default","ReusableBlocksMenuItems","BlockSettingsMenuControls","ReusableBlockConvertButton","ReusableBlocksManageButton","Fragment","_Fragment","jsxs","_jsxs","rootClientId","onClose","selectedClientIds","clientIds","length","clientId","hasBlockSupport","isReusableBlock","store","blockEditorStore","useCallback","useState","MenuItem","Modal","Button","TextControl","__experimentalHStack","HStack","__experimentalVStack","VStack","ToggleControl","useDispatch","useSelect","__","_x","sprintf","noticesStore","coreStore","syncType","setSyncType","undefined","isModalOpen","setIsModalOpen","title","setTitle","canConvert","select","_getBlocksByClientId","canUser","getBlocksByClientId","canInsertBlockType","getBlockRootClientId","rootId","blocks","isReusable","getEntityRecord","attributes","ref","_canConvert","every","block","isValid","name","kind","__experimentalConvertBlocksToReusable","convertBlocksToReusable","createSuccessNotice","createErrorNotice","onConvert","reusableBlockTitle","type","id","error","message","icon","onClick","onRequestClose","overlayClassName","onSubmit","event","preventDefault","spacing","__next40pxDefaultSize","__nextHasNoMarginBottom","label","value","onChange","placeholder","help","checked","justify","variant","addQueryArgs","reusableBlocksStore","canRemove","isVisible","managePatternsUrl","getBlock","canRemoveBlock","getBlockCount","reusableBlock","innerBlockCount","path","post_type","__experimentalConvertBlockToStatic","convertBlockToStatic","href","createBlock","parse","serialize","registry","oldBlock","getEditedEntityRecord","newBlocks","content","dispatch","replaceBlocks","meta","wp_pattern_sync_status","status","updatedRecord","saveEntityRecord","newBlock","__experimentalSetEditingReusableBlock","__experimentalDeleteReusableBlock","allBlocks","getBlocks","associatedBlocks","filter","associatedBlockClientIds","map","removeBlocks","deleteEntityRecord","isEditing","createReduxStore","register","actions","reducer","selectors","STORE_NAME","combineReducers","isEditingReusableBlock","state","action","__experimentalIsEditingReusableBlock"],"sourceRoot":""}