{"version":3,"file":"rich-text.js","mappings":"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","sources":["webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/apply-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/copy-handler.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/delete.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/format-boundaries.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/input-and-selection.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/select-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/event-listeners/@wordpress/rich-text/src/component/event-listeners/selection-change-compat.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor-ref.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-boundary-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-default-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/concat.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create-element.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-text-content.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-collapsed.ts","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-empty.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-format-equal.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-range-equal.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/join.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/normalise-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/register-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/replace.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/slice.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/special-characters.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/split.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/actions.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/selectors.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-dom.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-html-string.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-tree.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/toggle-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/unregister-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/update-formats.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"escapeHtml\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/index.ts"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\nfunction replace( array, index, value ) {\n\tarray = array.slice();\n\tarray[ index ] = value;\n\treturn array;\n}\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {RichTextValue}  value        Value to modify.\n * @param {RichTextFormat} format       Format to apply.\n * @param {number}         [startIndex] Start index.\n * @param {number}         [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = newFormats[ startIndex ]?.find(\n\t\t\t( { type } ) => type === format.type\n\t\t);\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\tconst index = newFormats[ startIndex ].indexOf( startFormat );\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ] &&\n\t\t\t\tnewFormats[ startIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ startIndex ] = replace(\n\t\t\t\t\tnewFormats[ startIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ] &&\n\t\t\t\tnewFormats[ endIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ endIndex ] = replace(\n\t\t\t\t\tnewFormats[ endIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Determine the highest position the new format can be inserted at.\n\t\tlet position = +Infinity;\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tif ( newFormats[ index ] ) {\n\t\t\t\tnewFormats[ index ] = newFormats[ index ].filter(\n\t\t\t\t\t( { type } ) => type !== format.type\n\t\t\t\t);\n\n\t\t\t\tconst length = newFormats[ index ].length;\n\n\t\t\t\tif ( length < position ) {\n\t\t\t\t\tposition = length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewFormats[ index ] = [];\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tnewFormats[ index ].splice( position, 0, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\t// Always revise active formats. This serves as a placeholder for new\n\t\t// inputs with the format so new input appears with the format applied,\n\t\t// and ensures a format of the same type uses the latest values.\n\t\tactiveFormats: [\n\t\t\t...( activeFormats?.filter(\n\t\t\t\t( { type } ) => type !== format.type\n\t\t\t) || [] ),\n\t\t\tformat,\n\t\t],\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport { toHTMLString } from '../../to-html-string';\nimport { isCollapsed } from '../../is-collapsed';\nimport { slice } from '../../slice';\nimport { getTextContent } from '../../get-text-content';\n\nexport default ( props ) => ( element ) => {\n\tfunction onCopy( event ) {\n\t\tconst { record } = props.current;\n\t\tconst { ownerDocument } = element;\n\t\tif (\n\t\t\tisCollapsed( record.current ) ||\n\t\t\t! element.contains( ownerDocument.activeElement )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedRecord = slice( record.current );\n\t\tconst plainText = getTextContent( selectedRecord );\n\t\tconst html = toHTMLString( { value: selectedRecord } );\n\t\tevent.clipboardData.setData( 'text/plain', plainText );\n\t\tevent.clipboardData.setData( 'text/html', html );\n\t\tevent.clipboardData.setData( 'rich-text', 'true' );\n\t\tevent.preventDefault();\n\n\t\tif ( event.type === 'cut' ) {\n\t\t\townerDocument.execCommand( 'delete' );\n\t\t}\n\t}\n\n\tconst { defaultView } = element.ownerDocument;\n\n\tdefaultView.addEventListener( 'copy', onCopy );\n\tdefaultView.addEventListener( 'cut', onCopy );\n\treturn () => {\n\t\tdefaultView.removeEventListener( 'copy', onCopy );\n\t\tdefaultView.removeEventListener( 'cut', onCopy );\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { remove } from '../../remove';\n\nexport default ( props ) => ( element ) => {\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\t\tconst { createRecord, handleChange } = props.current;\n\n\t\tif ( event.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, end, text } = currentValue;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\thandleChange( remove( currentValue ) );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\telement.addEventListener( 'keydown', onKeyDown );\n\treturn () => {\n\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport default ( props ) => ( element ) => {\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { record, applyRecord, forceRender } = props.current;\n\t\tconst {\n\t\t\ttext,\n\t\t\tformats,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t} = record.current;\n\t\tconst collapsed = isCollapsed( record.current );\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t( format, index ) => format === destination[ index ]\n\t\t);\n\n\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\tif ( ! isIncreasing ) {\n\t\t\tnewActiveFormatsLength--;\n\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\tnewActiveFormatsLength++;\n\t\t}\n\n\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\trecord.current._newActiveFormats = destination;\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\tconst source = isIncreasing ? destination : origin;\n\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\tconst newValue = {\n\t\t\t...record.current,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue );\n\t\tforceRender();\n\t}\n\n\telement.addEventListener( 'keydown', onKeyDown );\n\treturn () => {\n\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport copyHandler from './copy-handler';\nimport selectObject from './select-object';\nimport formatBoundaries from './format-boundaries';\nimport deleteHandler from './delete';\nimport inputAndSelection from './input-and-selection';\nimport selectionChangeCompat from './selection-change-compat';\n\nconst allEventListeners = [\n\tcopyHandler,\n\tselectObject,\n\tformatBoundaries,\n\tdeleteHandler,\n\tinputAndSelection,\n\tselectionChangeCompat,\n];\n\nexport function useEventListeners( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\tconst refEffects = useMemo(\n\t\t() => allEventListeners.map( ( refEffect ) => refEffect( propsRef ) ),\n\t\t[ propsRef ]\n\t);\n\n\treturn useRefEffect(\n\t\t( element ) => {\n\t\t\tconst cleanups = refEffects.map( ( effect ) => effect( element ) );\n\t\t\treturn () => {\n\t\t\t\tcleanups.forEach( ( cleanup ) => cleanup() );\n\t\t\t};\n\t\t},\n\t\t[ refEffects ]\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../../get-active-formats';\nimport { updateFormats } from '../../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nconst PLACEHOLDER_ATTR_NAME = 'data-rich-text-placeholder';\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.hasAttribute( PLACEHOLDER_ATTR_NAME )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport default ( props ) => ( element ) => {\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\n\tlet isComposing = false;\n\n\tfunction onInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed. As of December 2019, Safari doesn't support\n\t\t// nativeEvent.isComposing.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tconst { record, applyRecord, createRecord, handleChange } =\n\t\t\tprops.current;\n\n\t\t// The browser formatted something or tried to insert HTML. Overwrite\n\t\t// it. It will be handled later by the format library if needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tapplyRecord( record.current );\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, activeFormats: oldActiveFormats = [] } = record.current;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue: currentValue,\n\t\t\tstart,\n\t\t\tend: currentValue.start,\n\t\t\tformats: oldActiveFormats,\n\t\t} );\n\n\t\thandleChange( change );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * event.\n\t */\n\tfunction handleSelectionChange() {\n\t\tconst { record, applyRecord, createRecord, onSelectionChange } =\n\t\t\tprops.current;\n\n\t\t// Check if the implementor disabled editing. `contentEditable` does\n\t\t// disable input, but not text selection, so we must ignore selection\n\t\t// changes.\n\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the active element is the rich text element.\n\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t// If it is not, we can stop listening for selection changes. We\n\t\t\t// resume listening when the element is focused.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = createRecord();\n\t\tconst oldRecord = record.current;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== oldRecord.text ) {\n\t\t\tonInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = {\n\t\t\t...oldRecord,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t// give the active formats according to the browser.\n\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t_newActiveFormats: undefined,\n\t\t};\n\n\t\tconst newActiveFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue, { domOnly: true } );\n\t\tonSelectionChange( start, end );\n\t}\n\n\tfunction onCompositionStart() {\n\t\tisComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might destroy internal browser\n\t\t// editing state.\n\t\townerDocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t\t// Remove the placeholder. Since the rich text value doesn't update\n\t\t// during composition, the placeholder doesn't get removed. There's no\n\t\t// need to re-add it, when the value is updated on compositionend it\n\t\t// will be re-added when the value is empty.\n\t\telement.querySelector( `[${ PLACEHOLDER_ATTR_NAME }]` )?.remove();\n\t}\n\n\tfunction onCompositionEnd() {\n\t\tisComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tonInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction onFocus() {\n\t\tconst { record, isSelected, onSelectionChange, applyRecord } =\n\t\t\tprops.current;\n\n\t\t// When the whole editor is editable, let writing flow handle\n\t\t// selection.\n\t\tif ( element.parentElement.closest( '[contenteditable=\"true\"]' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t// event.\n\t\t\tconst index = undefined;\n\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t};\n\t\t} else {\n\t\t\tapplyRecord( record.current, { domOnly: true } );\n\t\t}\n\n\t\tonSelectionChange( record.current.start, record.current.end );\n\n\t\t// There is no selection change event when the element is focused, so\n\t\t// we need to manually trigger it. The selection is also not available\n\t\t// yet in this call stack.\n\t\twindow.queueMicrotask( handleSelectionChange );\n\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\telement.addEventListener( 'input', onInput );\n\telement.addEventListener( 'compositionstart', onCompositionStart );\n\telement.addEventListener( 'compositionend', onCompositionEnd );\n\telement.addEventListener( 'focus', onFocus );\n\n\treturn () => {\n\t\telement.removeEventListener( 'input', onInput );\n\t\telement.removeEventListener( 'compositionstart', onCompositionStart );\n\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\telement.removeEventListener( 'focus', onFocus );\n\t};\n};\n","export default () => ( element ) => {\n\tfunction onClick( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif (\n\t\t\ttarget === element ||\n\t\t\t( target.textContent && target.isContentEditable )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = target;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst selection = defaultView.getSelection();\n\n\t\t// If it's already selected, do nothing and let default behavior happen.\n\t\t// This means it's \"click-through\".\n\t\tif ( selection.containsNode( target ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = ownerDocument.createRange();\n\t\t// If the target is within a non editable element, select the non\n\t\t// editable element.\n\t\tconst nodeToSelect = target.isContentEditable\n\t\t\t? target\n\t\t\t: target.closest( '[contenteditable]' );\n\n\t\trange.selectNode( nodeToSelect );\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\n\t\tevent.preventDefault();\n\t}\n\n\tfunction onFocusIn( event ) {\n\t\t// When there is incoming focus from a link, select the object.\n\t\tif (\n\t\t\tevent.relatedTarget &&\n\t\t\t! element.contains( event.relatedTarget ) &&\n\t\t\tevent.relatedTarget.tagName === 'A'\n\t\t) {\n\t\t\tonClick( event );\n\t\t}\n\t}\n\n\telement.addEventListener( 'click', onClick );\n\telement.addEventListener( 'focusin', onFocusIn );\n\treturn () => {\n\t\telement.removeEventListener( 'click', onClick );\n\t\telement.removeEventListener( 'focusin', onFocusIn );\n\t};\n};\n","/**\n * Internal dependencies\n */\nimport { isRangeEqual } from '../../is-range-equal';\n\n/**\n * Sometimes some browsers are not firing a `selectionchange` event when\n * changing the selection by mouse or keyboard. This hook makes sure that, if we\n * detect no `selectionchange` or `input` event between the up and down events,\n * we fire a `selectionchange` event.\n */\nexport default () => ( element ) => {\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView?.getSelection();\n\n\tlet range;\n\n\tfunction getRange() {\n\t\treturn selection.rangeCount ? selection.getRangeAt( 0 ) : null;\n\t}\n\n\tfunction onDown( event ) {\n\t\tconst type = event.type === 'keydown' ? 'keyup' : 'pointerup';\n\n\t\tfunction onCancel() {\n\t\t\townerDocument.removeEventListener( type, onUp );\n\t\t\townerDocument.removeEventListener( 'selectionchange', onCancel );\n\t\t\townerDocument.removeEventListener( 'input', onCancel );\n\t\t}\n\n\t\tfunction onUp() {\n\t\t\tonCancel();\n\t\t\tif ( isRangeEqual( range, getRange() ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\townerDocument.dispatchEvent( new Event( 'selectionchange' ) );\n\t\t}\n\n\t\townerDocument.addEventListener( type, onUp );\n\t\townerDocument.addEventListener( 'selectionchange', onCancel );\n\t\townerDocument.addEventListener( 'input', onCancel );\n\n\t\trange = getRange();\n\t}\n\n\telement.addEventListener( 'pointerdown', onDown );\n\telement.addEventListener( 'keydown', onDown );\n\treturn () => {\n\t\telement.removeEventListener( 'pointerdown', onDown );\n\t\telement.removeEventListener( 'keydown', onDown );\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create, RichTextData } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useEventListeners } from './event-listeners';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tonSelectionChange,\n\tpreserveWhiteSpace,\n\tonChange,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _valueRef = useRef( value );\n\tconst recordRef = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_valueRef.current = value;\n\t\trecordRef.current = value;\n\t\tif ( ! ( value instanceof RichTextData ) ) {\n\t\t\trecordRef.current = value\n\t\t\t\t? RichTextData.fromHTMLString( value, { preserveWhiteSpace } )\n\t\t\t\t: RichTextData.empty();\n\t\t}\n\t\t// To do: make rich text internally work with RichTextData.\n\t\trecordRef.current = {\n\t\t\ttext: recordRef.current.text,\n\t\t\tformats: recordRef.current.formats,\n\t\t\treplacements: recordRef.current.replacements,\n\t\t};\n\t\tif ( disableFormats ) {\n\t\t\trecordRef.current.formats = Array( value.length );\n\t\t\trecordRef.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecordRef.current.formats = __unstableAfterParse(\n\t\t\t\trecordRef.current\n\t\t\t);\n\t\t}\n\t\trecordRef.current.start = selectionStart;\n\t\trecordRef.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdateRef = useRef( false );\n\n\tif ( ! recordRef.current ) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\tsetRecordFromProps();\n\t} else if (\n\t\tselectionStart !== recordRef.current.start ||\n\t\tselectionEnd !== recordRef.current.end\n\t) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\trecordRef.current = {\n\t\t\t...recordRef.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecordRef.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_valueRef.current = newRecord.text;\n\t\t} else {\n\t\t\tconst newFormats = __unstableBeforeSerialize\n\t\t\t\t? __unstableBeforeSerialize( newRecord )\n\t\t\t\t: newRecord.formats;\n\t\t\tnewRecord = { ...newRecord, formats: newFormats };\n\t\t\tif ( typeof value === 'string' ) {\n\t\t\t\t_valueRef.current = toHTMLString( {\n\t\t\t\t\tvalue: newRecord,\n\t\t\t\t\tpreserveWhiteSpace,\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\t_valueRef.current = new RichTextData( newRecord );\n\t\t\t}\n\t\t}\n\n\t\tconst { start, end, formats, text } = recordRef.current;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _valueRef.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( recordRef.current );\n\t}\n\n\tconst didMountRef = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMountRef.current && value !== _valueRef.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdateRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( recordRef.current );\n\t\thadSelectionUpdateRef.current = false;\n\t}, [ hadSelectionUpdateRef.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record: recordRef } ),\n\t\tuseEventListeners( {\n\t\t\trecord: recordRef,\n\t\t\thandleChange,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t\tforceRender,\n\t\t} ),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMountRef.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: recordRef.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => recordRef.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\n\n/**\n * @template T\n * @typedef {import('@wordpress/element').RefObject<T>} RefObject<T>\n */\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\n/** @typedef {import('../types').RichTextValue} RichTextValue */\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or the selection range if no format is active.\n * The returned value is meant to be used for positioning UI, e.g. by passing it\n * to the `Popover` component.\n *\n * @param {Object}                 $1          Named parameters.\n * @param {RefObject<HTMLElement>} $1.ref      React ref of the element\n *                                             containing  the editable content.\n * @param {RichTextValue}          $1.value    Value to check for selection.\n * @param {WPFormat}               $1.settings The format type's settings.\n *\n * @return {Element|Range} The active element or selection range.\n */\nexport function useAnchorRef( { ref, value, settings = {} } ) {\n\tdeprecated( '`useAnchorRef` hook', {\n\t\tsince: '6.1',\n\t\talternative: '`useAnchor` hook',\n\t} );\n\n\tconst { tagName, className, name } = settings;\n\tconst activeFormat = name ? getActiveFormat( value, name ) : undefined;\n\n\treturn useMemo( () => {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\n\t\tif ( ! selection.rangeCount ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = selection.getRangeAt( 0 );\n\n\t\tif ( ! activeFormat ) {\n\t\t\treturn range;\n\t\t}\n\n\t\tlet element = range.startContainer;\n\n\t\t// If the caret is right before the element, select the next element.\n\t\telement = element.nextElementSibling || element;\n\n\t\twhile ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\t\telement = element.parentNode;\n\t\t}\n\n\t\treturn element.closest(\n\t\t\ttagName + ( className ? '.' + className : '' )\n\t\t);\n\t}, [ activeFormat, value.start, value.end, tagName, className ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { useState, useLayoutEffect } from '@wordpress/element';\n\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\n/** @typedef {import('../types').RichTextValue} RichTextValue */\n\n/**\n * Given a range and a format tag name and class name, returns the closest\n * format element.\n *\n * @param {Range}       range                  The Range to check.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format element.\n * @param {string}      className              The class name of the format element.\n *\n * @return {HTMLElement|undefined} The format element, if found.\n */\nfunction getFormatElement( range, editableContentElement, tagName, className ) {\n\tlet element = range.startContainer;\n\n\t// Even if the active format is defined, the actualy DOM range's start\n\t// container may be outside of the format's DOM element:\n\t// `a‸<strong>b</strong>` (DOM) while visually it's `a<strong>‸b</strong>`.\n\t// So at a given selection index, start with the deepest format DOM element.\n\tif (\n\t\telement.nodeType === element.TEXT_NODE &&\n\t\trange.startOffset === element.length &&\n\t\telement.nextSibling\n\t) {\n\t\telement = element.nextSibling;\n\n\t\twhile ( element.firstChild ) {\n\t\t\telement = element.firstChild;\n\t\t}\n\t}\n\n\tif ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\telement = element.parentElement;\n\t}\n\n\tif ( ! element ) {\n\t\treturn;\n\t}\n\tif ( element === editableContentElement ) {\n\t\treturn;\n\t}\n\tif ( ! editableContentElement.contains( element ) ) {\n\t\treturn;\n\t}\n\n\tconst selector = tagName + ( className ? '.' + className : '' );\n\n\t// .closest( selector ), but with a boundary. Check if the element matches\n\t// the selector. If it doesn't match, try the parent element if it's not the\n\t// editable wrapper. We don't want to try to match ancestors of the editable\n\t// wrapper, which is what .closest( selector ) would do. When the element is\n\t// the editable wrapper (which is most likely the case because most text is\n\t// unformatted), this never runs.\n\twhile ( element !== editableContentElement ) {\n\t\tif ( element.matches( selector ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n}\n\n/**\n * @typedef {Object} VirtualAnchorElement\n * @property {() => DOMRect} getBoundingClientRect A function returning a DOMRect\n * @property {HTMLElement}   contextElement        The actual DOM element\n */\n\n/**\n * Creates a virtual anchor element for a range.\n *\n * @param {Range}       range                  The range to create a virtual anchor element for.\n * @param {HTMLElement} editableContentElement The editable wrapper.\n *\n * @return {VirtualAnchorElement} The virtual anchor element.\n */\nfunction createVirtualAnchorElement( range, editableContentElement ) {\n\treturn {\n\t\tcontextElement: editableContentElement,\n\t\tgetBoundingClientRect() {\n\t\t\treturn editableContentElement.contains( range.startContainer )\n\t\t\t\t? range.getBoundingClientRect()\n\t\t\t\t: editableContentElement.getBoundingClientRect();\n\t\t},\n\t};\n}\n\n/**\n * Get the anchor: a format element if there is a matching one based on the\n * tagName and className or a range otherwise.\n *\n * @param {HTMLElement} editableContentElement The editable wrapper.\n * @param {string}      tagName                The tag name of the format\n *                                             element.\n * @param {string}      className              The class name of the format\n *                                             element.\n *\n * @return {HTMLElement|VirtualAnchorElement|undefined} The anchor.\n */\nfunction getAnchor( editableContentElement, tagName, className ) {\n\tif ( ! editableContentElement ) {\n\t\treturn;\n\t}\n\n\tconst { ownerDocument } = editableContentElement;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\n\tif ( ! selection ) {\n\t\treturn;\n\t}\n\tif ( ! selection.rangeCount ) {\n\t\treturn;\n\t}\n\n\tconst range = selection.getRangeAt( 0 );\n\n\tif ( ! range || ! range.startContainer ) {\n\t\treturn;\n\t}\n\n\tconst formatElement = getFormatElement(\n\t\trange,\n\t\teditableContentElement,\n\t\ttagName,\n\t\tclassName\n\t);\n\n\tif ( formatElement ) {\n\t\treturn formatElement;\n\t}\n\n\treturn createVirtualAnchorElement( range, editableContentElement );\n}\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or a virtual element for the selection range if\n * no format is active. The returned value is meant to be used for positioning\n * UI, e.g. by passing it to the `Popover` component via the `anchor` prop.\n *\n * @param {Object}           $1                        Named parameters.\n * @param {HTMLElement|null} $1.editableContentElement The element containing\n *                                                     the editable content.\n * @param {WPFormat=}        $1.settings               The format type's settings.\n * @return {Element|VirtualAnchorElement|undefined|null} The active element or selection range.\n */\nexport function useAnchor( { editableContentElement, settings = {} } ) {\n\tconst { tagName, className, isActive } = settings;\n\tconst [ anchor, setAnchor ] = useState( () =>\n\t\tgetAnchor( editableContentElement, tagName, className )\n\t);\n\tconst wasActive = usePrevious( isActive );\n\n\tuseLayoutEffect( () => {\n\t\tif ( ! editableContentElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction callback() {\n\t\t\tsetAnchor(\n\t\t\t\tgetAnchor( editableContentElement, tagName, className )\n\t\t\t);\n\t\t}\n\n\t\tfunction attach() {\n\t\t\townerDocument.addEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tfunction detach() {\n\t\t\townerDocument.removeEventListener( 'selectionchange', callback );\n\t\t}\n\n\t\tconst { ownerDocument } = editableContentElement;\n\n\t\tif (\n\t\t\teditableContentElement === ownerDocument.activeElement ||\n\t\t\t// When a link is created, we need to attach the popover to the newly created anchor.\n\t\t\t( ! wasActive && isActive ) ||\n\t\t\t// Sometimes we're _removing_ an active anchor, such as the inline color popover.\n\t\t\t// When we add the color, it switches from a virtual anchor to a `<mark>` element.\n\t\t\t// When we _remove_ the color, it switches from a `<mark>` element to a virtual anchor.\n\t\t\t( wasActive && ! isActive )\n\t\t) {\n\t\t\tsetAnchor(\n\t\t\t\tgetAnchor( editableContentElement, tagName, className )\n\t\t\t);\n\t\t\tattach();\n\t\t}\n\n\t\teditableContentElement.addEventListener( 'focusin', attach );\n\t\teditableContentElement.addEventListener( 'focusout', detach );\n\n\t\treturn () => {\n\t\t\tdetach();\n\n\t\t\teditableContentElement.removeEventListener( 'focusin', attach );\n\t\t\teditableContentElement.removeEventListener( 'focusout', detach );\n\t\t};\n\t}, [ editableContentElement, tagName, className, isActive, wasActive ] );\n\n\treturn anchor;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/*\n * Calculates and renders the format boundary style when the active formats\n * change.\n */\nexport function useBoundaryStyle( { record } ) {\n\tconst ref = useRef();\n\tconst { activeFormats = [], replacements, start } = record.current;\n\tconst activeReplacement = replacements[ start ];\n\tuseEffect( () => {\n\t\t// There's no need to recalculate the boundary styles if no formats are\n\t\t// active, because no boundary styles will be visible.\n\t\tif (\n\t\t\t( ! activeFormats || ! activeFormats.length ) &&\n\t\t\t! activeReplacement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = ref.current.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst computedStyle = defaultView.getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\t\tconst style = `${ selector } {${ rule }}`;\n\t\tconst globalStyleId = 'rich-text-boundary-style';\n\n\t\tlet globalStyle = ownerDocument.getElementById( globalStyleId );\n\n\t\tif ( ! globalStyle ) {\n\t\t\tglobalStyle = ownerDocument.createElement( 'style' );\n\t\t\tglobalStyle.id = globalStyleId;\n\t\t\townerDocument.head.appendChild( globalStyle );\n\t\t}\n\n\t\tif ( globalStyle.innerHTML !== style ) {\n\t\t\tglobalStyle.innerHTML = style;\n\t\t}\n\t}, [ activeFormats, activeReplacement ] );\n\treturn ref;\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * A minimum width of 1px will prevent the rich text container from collapsing\n * to 0 width and hiding the caret. This is useful for inline containers.\n */\nconst minWidth = '1px';\n\nexport function useDefaultStyle() {\n\treturn useCallback( ( element ) => {\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.style.whiteSpace = whiteSpace;\n\t\telement.style.minWidth = minWidth;\n\t}, [] );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param {Object} a Value to mutate.\n * @param {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...RichTextValue} values Objects to combine.\n *\n * @return {RichTextValue} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n","/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\nimport { toHTMLString } from './to-html-string';\nimport { getTextContent } from './get-text-content';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction toFormat( { tagName, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType =\n\t\t\tselect( richTextStore ).getFormatTypeForBareElement( tagName );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type: tagName, attributes } : { type: tagName };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { formatType, type: formatType.name, tagName };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\tconst _attributes = { ...attributes };\n\n\tfor ( const key in formatType.attributes ) {\n\t\tconst name = formatType.attributes[ key ];\n\n\t\tregisteredAttributes[ key ] = _attributes[ name ];\n\n\t\t// delete the attribute and what's left is considered\n\t\t// to be unregistered.\n\t\tdelete _attributes[ name ];\n\n\t\tif ( typeof registeredAttributes[ key ] === 'undefined' ) {\n\t\t\tdelete registeredAttributes[ key ];\n\t\t}\n\t}\n\n\tfor ( const name in _attributes ) {\n\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t}\n\n\tif ( formatType.contentEditable === false ) {\n\t\tdelete unregisteredAttributes.contenteditable;\n\t}\n\n\treturn {\n\t\tformatType,\n\t\ttype: formatType.name,\n\t\ttagName,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * The RichTextData class is used to instantiate a wrapper around rich text\n * values, with methods that can be used to transform or manipulate the data.\n *\n * - Create an empty instance: `new RichTextData()`.\n * - Create one from an HTML string: `RichTextData.fromHTMLString(\n *   '<em>hello</em>' )`.\n * - Create one from a wrapper HTMLElement: `RichTextData.fromHTMLElement(\n *   document.querySelector( 'p' ) )`.\n * - Create one from plain text: `RichTextData.fromPlainText( '1\\n2' )`.\n * - Create one from a rich text value: `new RichTextData( { text: '...',\n *   formats: [ ... ] } )`.\n *\n * @todo Add methods to manipulate the data, such as applyFormat, slice etc.\n */\nexport class RichTextData {\n\t#value;\n\n\tstatic empty() {\n\t\treturn new RichTextData();\n\t}\n\tstatic fromPlainText( text ) {\n\t\treturn new RichTextData( create( { text } ) );\n\t}\n\tstatic fromHTMLString( html ) {\n\t\treturn new RichTextData( create( { html } ) );\n\t}\n\tstatic fromHTMLElement( htmlElement, options = {} ) {\n\t\tconst { preserveWhiteSpace = false } = options;\n\t\tconst element = preserveWhiteSpace\n\t\t\t? htmlElement\n\t\t\t: collapseWhiteSpace( htmlElement );\n\t\tconst richTextData = new RichTextData( create( { element } ) );\n\t\tObject.defineProperty( richTextData, 'originalHTML', {\n\t\t\tvalue: htmlElement.innerHTML,\n\t\t} );\n\t\treturn richTextData;\n\t}\n\tconstructor( init = createEmptyValue() ) {\n\t\tthis.#value = init;\n\t}\n\ttoPlainText() {\n\t\treturn getTextContent( this.#value );\n\t}\n\t// We could expose `toHTMLElement` at some point as well, but we'd only use\n\t// it internally.\n\ttoHTMLString( { preserveWhiteSpace } = {} ) {\n\t\treturn (\n\t\t\tthis.originalHTML ||\n\t\t\ttoHTMLString( { value: this.#value, preserveWhiteSpace } )\n\t\t);\n\t}\n\tvalueOf() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoString() {\n\t\treturn this.toHTMLString();\n\t}\n\ttoJSON() {\n\t\treturn this.toHTMLString();\n\t}\n\tget length() {\n\t\treturn this.text.length;\n\t}\n\tget formats() {\n\t\treturn this.#value.formats;\n\t}\n\tget replacements() {\n\t\treturn this.#value.replacements;\n\t}\n\tget text() {\n\t\treturn this.#value.text;\n\t}\n}\n\nfor ( const name of Object.getOwnPropertyNames( String.prototype ) ) {\n\tif ( RichTextData.prototype.hasOwnProperty( name ) ) {\n\t\tcontinue;\n\t}\n\n\tObject.defineProperty( RichTextData.prototype, name, {\n\t\tvalue( ...args ) {\n\t\t\t// Should we convert back to RichTextData?\n\t\t\treturn this.toHTMLString()[ name ]( ...args );\n\t\t},\n\t} );\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. The optional\n * functions can be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                          Optional named arguments.\n * @param {Element} [$1.element]                  Element to create value from.\n * @param {string}  [$1.text]                     Text to create value from.\n * @param {string}  [$1.html]                     HTML to create value from.\n * @param {Range}   [$1.range]                    Range to create value from.\n * @param {boolean} [$1.__unstableIsEditableTree]\n * @return {RichTextValue} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\t__unstableIsEditableTree: isEditableTree,\n} = {} ) {\n\tif ( html instanceof RichTextData ) {\n\t\treturn {\n\t\t\ttext: html.text,\n\t\t\tformats: html.formats,\n\t\t\treplacements: html.replacements,\n\t\t};\n\t}\n\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\t// It does not matter which document this is, we're just using it to\n\t\t// parse.\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\treturn createFromElement( {\n\t\telement,\n\t\trange,\n\t\tisEditableTree,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {Object|void} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * We need to strip it from the content because we use white-space: pre-wrap for\n * displaying editable rich text. Without using white-space: pre-wrap, the\n * browser will litter the content with non breaking spaces, among other issues.\n * See packages/rich-text/src/component/use-default-style.js.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/CSS/white-space-collapse#collapsing_of_white_space\n *\n * @param {HTMLElement} element\n * @param {boolean}     isRoot\n *\n * @return {HTMLElement} New element with collapsed whitespace.\n */\nfunction collapseWhiteSpace( element, isRoot = true ) {\n\tconst clone = element.cloneNode( true );\n\tclone.normalize();\n\tArray.from( clone.childNodes ).forEach( ( node, i, nodes ) => {\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tlet newNodeValue = node.nodeValue;\n\n\t\t\tif ( /[\\n\\t\\r\\f]/.test( newNodeValue ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( /[\\n\\t\\r\\f]+/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( newNodeValue.indexOf( '  ' ) !== -1 ) {\n\t\t\t\tnewNodeValue = newNodeValue.replace( / {2,}/g, ' ' );\n\t\t\t}\n\n\t\t\tif ( i === 0 && newNodeValue.startsWith( ' ' ) ) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 1 );\n\t\t\t} else if (\n\t\t\t\tisRoot &&\n\t\t\t\ti === nodes.length - 1 &&\n\t\t\t\tnewNodeValue.endsWith( ' ' )\n\t\t\t) {\n\t\t\t\tnewNodeValue = newNodeValue.slice( 0, -1 );\n\t\t\t}\n\n\t\t\tnode.nodeValue = newNodeValue;\n\t\t} else if ( node.nodeType === node.ELEMENT_NODE ) {\n\t\t\tcollapseWhiteSpace( node, false );\n\t\t}\n\t} );\n\treturn clone;\n}\n\n/**\n * We need to normalise line breaks to `\\n` so they are consistent across\n * platforms and serialised properly. Not removing \\r would cause it to\n * linger and result in double line breaks when whitespace is preserved.\n */\nconst CARRIAGE_RETURN = '\\r';\n\n/**\n * Removes reserved characters used by rich-text (zero width non breaking spaces\n * added by `toTree` and object replacement characters).\n *\n * @param {string} string\n */\nexport function removeReservedCharacters( string ) {\n\t// with the global flag, note that we should create a new regex each time OR\n\t// reset lastIndex state.\n\treturn string.replace(\n\t\tnew RegExp(\n\t\t\t`[${ ZWNBSP }${ OBJECT_REPLACEMENT_CHARACTER }${ CARRIAGE_RETURN }]`,\n\t\t\t'gu'\n\t\t),\n\t\t''\n\t);\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}  $1                  Named argements.\n * @param {Element} [$1.element]        Element to create value from.\n * @param {Range}   [$1.range]          Range to create value from.\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromElement( { element, range, isEditableTree } ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst tagName = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tconst text = removeReservedCharacters( node.nodeValue );\n\t\t\trange = filterRange( node, range, removeReservedCharacters );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\ttagName === 'br' &&\n\t\t\t! node.getAttribute( 'data-rich-text-line-break' )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'script' ) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: tagName,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-script':\n\t\t\t\t\t\t\t\tnode.getAttribute( 'data-rich-text-script' ) ||\n\t\t\t\t\t\t\t\tencodeURIComponent( node.innerHTML ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( tagName === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst format = toFormat( {\n\t\t\ttagName,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\n\t\t// When a format type is declared as not editable, replace it with an\n\t\t// object replacement character and preserve the inner HTML.\n\t\tif ( format?.formatType?.contentEditable === false ) {\n\t\t\tdelete format.formatType;\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...format,\n\t\t\t\t\t\tinnerHTML: node.innerHTML,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( format ) {\n\t\t\tdelete format.formatType;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\t// Ignore any placeholders, but keep their content since the browser\n\t\t// might insert text inside them when the editable element is flex.\n\t\tif ( ! format || node.getAttribute( 'data-rich-text-placeholder' ) ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}  $1         Named argements.\n * @param {Element} $1.element Element to get attributes from.\n *\n * @return {Object|void} Attribute object or `undefined` if the element has no\n *                       attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst safeName = /^on/i.test( name )\n\t\t\t? 'data-disable-rich-text-' + name\n\t\t\t: name;\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ safeName ] = value;\n\t}\n\n\treturn accumulator;\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormats } from './get-active-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {RichTextValue} value      Value to inspect.\n * @param {string}        formatType Format type to look for.\n *\n * @return {RichTextFormat|undefined} Active format object of the specified\n *                                    type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn getActiveFormats( value ).find(\n\t\t( { type } ) => type === formatType\n\t);\n}\n","/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormatList} RichTextFormatList */\n\n/**\n * Internal dependencies\n */\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {RichTextValue} value                Value to inspect.\n * @param {Array}         EMPTY_ACTIVE_FORMATS Array to return if there are no\n *                                             active formats.\n *\n * @return {RichTextFormatList} Active format objects.\n */\nexport function getActiveFormats( value, EMPTY_ACTIVE_FORMATS = [] ) {\n\tconst { formats, start, end, activeFormats } = value;\n\tif ( start === undefined ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\t// If there's no formats at the start index, there are not active formats.\n\tif ( ! formats[ start ] ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tconst selectedFormats = formats.slice( start, end );\n\n\t// Clone the formats so we're not mutating the live value.\n\tconst _activeFormats = [ ...selectedFormats[ 0 ] ];\n\tlet i = selectedFormats.length;\n\n\t// For performance reasons, start from the end where it's much quicker to\n\t// realise that there are no active formats.\n\twhile ( i-- ) {\n\t\tconst formatsAtIndex = selectedFormats[ i ];\n\n\t\t// If we run into any index without formats, we're sure that there's no\n\t\t// active formats.\n\t\tif ( ! formatsAtIndex ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\n\t\tlet ii = _activeFormats.length;\n\n\t\t// Loop over the active formats and remove any that are not present at\n\t\t// the current index.\n\t\twhile ( ii-- ) {\n\t\t\tconst format = _activeFormats[ ii ];\n\n\t\t\tif (\n\t\t\t\t! formatsAtIndex.find( ( _format ) =>\n\t\t\t\t\tisFormatEqual( format, _format )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_activeFormats.splice( ii, 1 );\n\t\t\t}\n\t\t}\n\n\t\t// If there are no active formats, we can stop.\n\t\tif ( _activeFormats.length === 0 ) {\n\t\t\treturn EMPTY_ACTIVE_FORMATS;\n\t\t}\n\t}\n\n\treturn _activeFormats || EMPTY_ACTIVE_FORMATS;\n}\n","/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {RichTextValue} value Value to inspect.\n *\n * @return {RichTextFormat|void} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( richTextStore ).getFormatType( name );\n}\n","/**\n * Internal dependencies\n */\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text.replace( OBJECT_REPLACEMENT_CHARACTER, '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Insert a format as an object into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue}  value          Value to modify.\n * @param {RichTextFormat} formatToInsert Format to insert as object.\n * @param {number}         [startIndex]   Start index.\n * @param {number}         [endIndex]     End index.\n *\n * @return {RichTextValue} A new value with the object inserted.\n */\nexport function insertObject( value, formatToInsert, startIndex, endIndex ) {\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements: [ formatToInsert ],\n\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {RichTextValue}        value         Value to modify.\n * @param {RichTextValue|string} valueToInsert Value to insert.\n * @param {number}               [startIndex]  Start index.\n * @param {number}               [endIndex]    End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport type { RichTextValue } from './types';\n\n/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param props       The rich text value to check.\n * @param props.start\n * @param props.end\n * @return True if the selection is collapsed, false if not, undefined if there is no selection.\n */\nexport function isCollapsed( {\n\tstart,\n\tend,\n}: RichTextValue ): boolean | undefined {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n","/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n","/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Optimised equality check for format objects.\n *\n * @param {?RichTextFormat} format1 Format to compare.\n * @param {?RichTextFormat} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range|null} a First range object to test.\n * @param {Range|null} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nexport function isRangeEqual( a, b ) {\n\treturn (\n\t\ta === b ||\n\t\t( a &&\n\t\t\tb &&\n\t\t\ta.startContainer === b.startContainer &&\n\t\t\ta.startOffset === b.startOffset &&\n\t\t\ta.endContainer === b.endContainer &&\n\t\t\ta.endOffset === b.endOffset )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array<RichTextValue>} values      An array of values to join.\n * @param {string|RichTextValue} [separator] Separator string or value.\n *\n * @return {RichTextValue} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats(\n\t\tvalues.reduce( ( accumlator, { formats, replacements, text } ) => ( {\n\t\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t\t\treplacements: accumlator.replacements.concat(\n\t\t\t\tseparator.replacements,\n\t\t\t\treplacements\n\t\t\t),\n\t\t\ttext: accumlator.text + separator.text + text,\n\t\t} ) )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {RichTextValue} value Value to normalise formats of.\n *\n * @return {RichTextValue} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n/**\n * @typedef {Object} WPFormat\n *\n * @property {string}        name        A string identifying the format. Must be\n *                                       unique across all registered formats.\n * @property {string}        tagName     The HTML tag this format will wrap the\n *                                       selection with.\n * @property {boolean}       interactive Whether format makes content interactive or not.\n * @property {string | null} [className] A class to match the format.\n * @property {string}        title       Name of the format.\n * @property {Function}      edit        Should return a component for the user to\n *                                       interact with the new registered format.\n */\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name     Format name.\n * @param {WPFormat} settings Format settings.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully\n *                              registered; otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error( 'Format names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( richTextStore ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.tagName !== 'string' || settings.tagName === '' ) {\n\t\twindow.console.error( 'Format tag names must be a string.' );\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' ||\n\t\t\tsettings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9_-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, underscores, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForBareElement( settings.tagName );\n\n\t\tif (\n\t\t\tformatTypeForBareElement &&\n\t\t\tformatTypeForBareElement.name !== 'core/unknown'\n\t\t) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' +\n\t\t\t\tsettings.name +\n\t\t\t\t'\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error( 'Format titles must be strings.' );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).addFormatTypes( settings );\n\n\treturn settings;\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {string}        formatType   Format type to remove.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = newFormats[ startIndex ]?.find(\n\t\t\t( { type } ) => type === formatType\n\t\t);\n\n\t\tif ( format ) {\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ]?.find(\n\t\t\t\t\t( newFormat ) => newFormat === format\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats:\n\t\t\tactiveFormats?.filter( ( { type } ) => type !== formatType ) || [],\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter(\n\t\t( { type } ) => type !== formatType\n\t);\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Search a Rich Text value and replace the match(es) with `replacement`. This\n * is similar to `String.prototype.replace`.\n *\n * @param {RichTextValue}   value       The value to modify.\n * @param {RegExp|string}   pattern     A RegExp object or literal. Can also be\n *                                      a string. It is treated as a verbatim\n *                                      string and is not interpreted as a\n *                                      regular expression. Only the first\n *                                      occurrence will be replaced.\n * @param {Function|string} replacement The match or matches are replaced with\n *                                      the specified or the value returned by\n *                                      the specified function.\n *\n * @return {RichTextValue} A new value with replacements applied.\n */\nexport function replace(\n\t{ formats, replacements, text, start, end },\n\tpattern,\n\treplacement\n) {\n\ttext = text.replace( pattern, ( match, ...rest ) => {\n\t\tconst offset = rest[ rest.length - 2 ];\n\t\tlet newText = replacement;\n\t\tlet newFormats;\n\t\tlet newReplacements;\n\n\t\tif ( typeof newText === 'function' ) {\n\t\t\tnewText = replacement( match, ...rest );\n\t\t}\n\n\t\tif ( typeof newText === 'object' ) {\n\t\t\tnewFormats = newText.formats;\n\t\t\tnewReplacements = newText.replacements;\n\t\t\tnewText = newText.text;\n\t\t} else {\n\t\t\tnewFormats = Array( newText.length );\n\t\t\tnewReplacements = Array( newText.length );\n\n\t\t\tif ( formats[ offset ] ) {\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\n\t\t\t}\n\t\t}\n\n\t\tformats = formats\n\t\t\t.slice( 0, offset )\n\t\t\t.concat( newFormats, formats.slice( offset + match.length ) );\n\t\treplacements = replacements\n\t\t\t.slice( 0, offset )\n\t\t\t.concat(\n\t\t\t\tnewReplacements,\n\t\t\t\treplacements.slice( offset + match.length )\n\t\t\t);\n\n\t\tif ( start ) {\n\t\t\tstart = end = offset + newText.length;\n\t\t}\n\n\t\treturn newText;\n\t} );\n\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\n}\n","/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new extracted value.\n */\nexport function slice( value, startIndex = value.start, endIndex = value.end ) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n","/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n","/**\n * Internal dependencies\n */\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array<RichTextValue>|undefined} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice(\n\t\t\t\tstartIndex,\n\t\t\t\tstartIndex + substring.length\n\t\t\t),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [ before, after ];\n}\n","/**\n * Returns an action object used in signalling that format types have been\n * added.\n * Ignored from documentation as registerFormatType should be used instead from @wordpress/rich-text\n *\n * @ignore\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: Array.isArray( formatTypes )\n\t\t\t? formatTypes\n\t\t\t: [ formatTypes ],\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * Ignored from documentation as unregisterFormatType should be used instead from @wordpress/rich-text\n *\n * @ignore\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: Array.isArray( names ) ? names : [ names ],\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'core/rich-text';\n\n/**\n * Store definition for the rich-text namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// Key format types by their name.\n\t\t\t\t...action.formatTypes.reduce(\n\t\t\t\t\t( newFormatTypes, type ) => ( {\n\t\t\t\t\t\t...newFormatTypes,\n\t\t\t\t\t\t[ type.name ]: type,\n\t\t\t\t\t} ),\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).filter(\n\t\t\t\t\t( [ key ] ) => ! action.names.includes( key )\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n","/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypes } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const availableFormats = getFormatTypes();\n *\n *    return availableFormats ? (\n *        <ul>\n *            { availableFormats?.map( ( format ) => (\n *                <li>{ format.name }</li>\n *           ) ) }\n *        </ul>\n *    ) : (\n *        __( 'No Formats available' )\n *    );\n * };\n * ```\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [ state.formatTypes ]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Format type name.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatType } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const boldFormat = getFormatType( 'core/bold' );\n *\n *    return boldFormat ? (\n *        <ul>\n *            { Object.entries( boldFormat )?.map( ( [ key, value ] ) => (\n *                <li>\n *                    { key } : { value }\n *                </li>\n *           ) ) }\n *       </ul>\n *    ) : (\n *        __( 'Not Found' )\n *    ;\n * };\n * ```\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypeForBareElement } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const format = getFormatTypeForBareElement( 'strong' );\n *\n *    return format && <p>{ sprintf( __( 'Format name: %s' ), format.name ) }</p>;\n * }\n * ```\n *\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\tconst formatTypes = getFormatTypes( state );\n\treturn (\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && bareElementTagName === tagName;\n\t\t} ) ||\n\t\tformatTypes.find( ( { className, tagName } ) => {\n\t\t\treturn className === null && '*' === tagName;\n\t\t} )\n\t);\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n *\n * @example\n * ```js\n * import { __, sprintf } from '@wordpress/i18n';\n * import { store as richTextStore } from '@wordpress/rich-text';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *    const { getFormatTypeForClassName } = useSelect(\n *        ( select ) => select( richTextStore ),\n *        []\n *    );\n *\n *    const format = getFormatTypeForClassName( 'has-inline-color' );\n *\n *    return format && <p>{ sprintf( __( 'Format name: %s' ), format.name ) }</p>;\n * };\n * ```\n *\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn getFormatTypes( state ).find( ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\nimport { isRangeEqual } from './is-range-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\nfunction append( element, child ) {\n\tif ( child.html !== undefined ) {\n\t\treturn ( element.innerHTML += child.html );\n\t}\n\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( node ) {\n\treturn node.nodeType === node.TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n\tdoc = document,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\n\t * applied.\n\t *\n\t * Note: The current implementation will return a shared reference, reset on\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\n\t * the value to operate upon asynchronously, as it may have unexpected results.\n\t *\n\t * @return {Object} RichText tree.\n\t */\n\tconst createEmpty = () => createElement( doc, '' );\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`.\n *\n * @param {Object}        $1                       Named arguments.\n * @param {RichTextValue} $1.value                 Value to apply.\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\n * @param {string}        [$1.placeholder]         Placeholder text.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t\tdoc: current.ownerDocument,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst { ownerDocument } = current;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== ownerDocument.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n","/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeEditableHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Create an HTML string from a Rich Text value.\n *\n * @param {Object}        $1                      Named argements.\n * @param {RichTextValue} $1.value                Rich text value.\n * @param {boolean}       [$1.preserveWhiteSpace] Preserves newlines if true.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, preserveWhiteSpace } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tpreserveWhiteSpace,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute(\n\t\t\tattributes[ key ]\n\t\t) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML(\n\t\tchildren\n\t) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children\n\t\t.map( ( child ) => {\n\t\t\tif ( child.html !== undefined ) {\n\t\t\t\treturn child.html;\n\t\t\t}\n\n\t\t\treturn child.text === undefined\n\t\t\t\t? createElementHTML( child )\n\t\t\t\t: escapeEditableHTML( child.text );\n\t\t} )\n\t\t.join( '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\n\nfunction restoreOnAttributes( attributes, isEditableTree ) {\n\tif ( isEditableTree ) {\n\t\treturn attributes;\n\t}\n\n\tconst newAttributes = {};\n\n\tfor ( const key in attributes ) {\n\t\tlet newKey = key;\n\t\tif ( key.startsWith( 'data-disable-rich-text-' ) ) {\n\t\t\tnewKey = key.slice( 'data-disable-rich-text-'.length );\n\t\t}\n\n\t\tnewAttributes[ newKey ] = attributes[ key ];\n\t}\n\n\treturn newAttributes;\n}\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param {Object}  $1                        Named parameters.\n * @param {string}  $1.type                   The format type.\n * @param {string}  $1.tagName                The tag name.\n * @param {Object}  $1.attributes             The format attributes.\n * @param {Object}  $1.unregisteredAttributes The unregistered format\n *                                            attributes.\n * @param {boolean} $1.object                 Whether or not it is an object\n *                                            format.\n * @param {boolean} $1.boundaryClass          Whether or not to apply a boundary\n *                                            class.\n * @param {boolean} $1.isEditableTree\n *\n * @return {Object} Information to be used for element creation.\n */\nfunction fromFormat( {\n\ttype,\n\ttagName,\n\tattributes,\n\tunregisteredAttributes,\n\tobject,\n\tboundaryClass,\n\tisEditableTree,\n} ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass && isEditableTree ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tattributes: restoreOnAttributes(\n\t\t\t\telementAttributes,\n\t\t\t\tisEditableTree\n\t\t\t),\n\t\t\tobject,\n\t\t};\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes\n\t\t\t? formatType.attributes[ name ]\n\t\t\t: false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\t// When a format is declared as non editable, make it non editable in the\n\t// editor.\n\tif ( isEditableTree && formatType.contentEditable === false ) {\n\t\telementAttributes.contenteditable = 'false';\n\t}\n\n\treturn {\n\t\ttype: tagName || formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: restoreOnAttributes( elementAttributes, isEditableTree ),\n\t};\n}\n\n/**\n * Checks if both arrays of formats up until a certain index are equal.\n *\n * @param {Array}  a     Array of formats to compare.\n * @param {Array}  b     Array of formats to compare.\n * @param {number} index Index to check until.\n */\nfunction isEqualUntil( a, b, index ) {\n\tdo {\n\t\tif ( a[ index ] !== b[ index ] ) {\n\t\t\treturn false;\n\t\t}\n\t} while ( index-- );\n\n\treturn true;\n}\n\nexport function toTree( {\n\tvalue,\n\tpreserveWhiteSpace,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\tappend( tree, '' );\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding =\n\t\t\tisEditableTree &&\n\t\t\t// Pad the line if the line is empty.\n\t\t\t( ! lastCharacter ||\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t\t// the line break won't be visible.\n\t\t\t\tlastCharacter === '\\n' );\n\n\t\tconst characterFormats = formats[ i ];\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\n\t\t\t\t\tisEqualUntil(\n\t\t\t\t\t\tcharacterFormats,\n\t\t\t\t\t\tlastCharacterFormats,\n\t\t\t\t\t\tformatIndex\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, tagName, attributes, unregisteredAttributes } =\n\t\t\t\t\tformat;\n\n\t\t\t\tconst boundaryClass =\n\t\t\t\t\tisEditableTree && format === deepestActiveFormat;\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append(\n\t\t\t\t\tparent,\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\ttagName,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\t\tboundaryClass,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tconst replacement = replacements[ i ];\n\t\t\tif ( ! replacement ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { type, attributes, innerHTML } = replacement;\n\t\t\tconst formatType = getFormatType( type );\n\n\t\t\tif ( ! isEditableTree && type === 'script' ) {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype: 'script',\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tappend( pointer, {\n\t\t\t\t\thtml: decodeURIComponent(\n\t\t\t\t\t\tattributes[ 'data-rich-text-script' ]\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t} else if ( formatType?.contentEditable === false ) {\n\t\t\t\t// For non editable formats, render the stored inner HTML.\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t\tboundaryClass: start === i && end === i + 1,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( innerHTML ) {\n\t\t\t\t\tappend( pointer, {\n\t\t\t\t\t\thtml: innerHTML,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacement,\n\t\t\t\t\t\tobject: true,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\t// We CANNOT use CSS to add a placeholder with pseudo elements on\n\t\t\t// the main block wrappers because that could clash with theme CSS.\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection and being editable.\n\t\t\t\t\t\tstyle: 'pointer-events:none;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n","/**\n * WordPress dependencies\n */\n\nimport { speak } from '@wordpress/a11y';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormat } from './get-active-format';\nimport { removeFormat } from './remove-format';\nimport { applyFormat } from './apply-format';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n/** @typedef {import('./types').RichTextFormat} RichTextFormat */\n\n/**\n * Toggles a format object to a Rich Text value at the current selection.\n *\n * @param {RichTextValue}  value  Value to modify.\n * @param {RichTextFormat} format Format to apply or remove.\n *\n * @return {RichTextValue} A new value with the format applied or removed.\n */\nexport function toggleFormat( value, format ) {\n\tif ( getActiveFormat( value, format.type ) ) {\n\t\t// For screen readers, will announce if formatting control is disabled.\n\t\tif ( format.title ) {\n\t\t\t// translators: %s: title of the formatting control\n\t\t\tspeak( sprintf( __( '%s removed.' ), format.title ), 'assertive' );\n\t\t}\n\t\treturn removeFormat( value, format.type );\n\t}\n\t// For screen readers, will announce if formatting control is enabled.\n\tif ( format.title ) {\n\t\t// translators: %s: title of the formatting control\n\t\tspeak( sprintf( __( '%s applied.' ), format.title ), 'assertive' );\n\t}\n\treturn applyFormat( value, format );\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').WPFormat} WPFormat */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {WPFormat|undefined} The previous format value, if it has\n *                                        been successfully unregistered;\n *                                        otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( richTextStore ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param {Object}        $1         Named paramentes.\n * @param {RichTextValue} $1.value   Value te update.\n * @param {number}        $1.start   Index to update from.\n * @param {number}        $1.end     Index to update until.\n * @param {Array}         $1.formats Replacement formats.\n *\n * @return {RichTextValue} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\t// Start and end may be switched in case of delete.\n\tconst min = Math.min( start, end );\n\tconst max = Math.max( start, end );\n\tconst formatsBefore = value.formats[ min - 1 ] || [];\n\tconst formatsAfter = value.formats[ max ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n","module.exports = window[\"wp\"][\"a11y\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"deprecated\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"escapeHtml\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"keycodes\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport { applyFormat } from './apply-format';\nexport { concat } from './concat';\nexport { RichTextData, create } from './create';\nexport { getActiveFormat } from './get-active-format';\nexport { getActiveFormats } from './get-active-formats';\nexport { getActiveObject } from './get-active-object';\nexport { getTextContent } from './get-text-content';\nexport { isCollapsed } from './is-collapsed';\nexport { isEmpty } from './is-empty';\nexport { join } from './join';\nexport { registerFormatType } from './register-format-type';\nexport { removeFormat } from './remove-format';\nexport { remove } from './remove';\nexport { replace } from './replace';\nexport { insert } from './insert';\nexport { insertObject } from './insert-object';\nexport { slice } from './slice';\nexport { split } from './split';\nexport { toDom as __unstableToDom } from './to-dom';\nexport { toHTMLString } from './to-html-string';\nexport { toggleFormat } from './toggle-format';\nexport { unregisterFormatType } from './unregister-format-type';\nexport { createElement as __unstableCreateElement } from './create-element';\n\nexport { useAnchorRef } from './component/use-anchor-ref';\nexport { useAnchor } from './component/use-anchor';\n\nexport {\n\tdefault as __experimentalRichText,\n\tuseRichText as __unstableUseRichText,\n} from './component';\n\n/**\n * An object which represents a formatted string. See main `@wordpress/rich-text`\n * documentation for more information.\n */\nexport type { RichTextValue } from './types';\n"],"names":["normaliseFormats","replace","array","index","value","slice","applyFormat","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","startFormat","find","type","indexOf","position","Infinity","filter","length","splice","toHTMLString","isCollapsed","getTextContent","props","element","onCopy","event","record","current","ownerDocument","contains","activeElement","selectedRecord","plainText","html","clipboardData","setData","preventDefault","execCommand","defaultView","addEventListener","removeEventListener","BACKSPACE","DELETE","remove","onKeyDown","keyCode","createRecord","handleChange","defaultPrevented","currentValue","text","LEFT","RIGHT","EMPTY_ACTIVE_FORMATS","shiftKey","altKey","metaKey","ctrlKey","applyRecord","forceRender","currentActiveFormats","collapsed","direction","getComputedStyle","reverseKey","isReverse","formatsBefore","formatsAfter","destination","isIncreasing","every","newActiveFormatsLength","_newActiveFormats","origin","source","newActiveFormats","newValue","useMemo","useRef","useRefEffect","copyHandler","selectObject","formatBoundaries","deleteHandler","inputAndSelection","selectionChangeCompat","allEventListeners","useEventListeners","propsRef","refEffects","map","refEffect","cleanups","effect","forEach","cleanup","getActiveFormats","updateFormats","INSERTION_INPUT_TYPES_TO_IGNORE","Set","PLACEHOLDER_ATTR_NAME","fixPlaceholderSelection","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","hasAttribute","collapseToStart","isComposing","onInput","inputType","has","oldActiveFormats","change","handleSelectionChange","onSelectionChange","contentEditable","oldRecord","undefined","domOnly","onCompositionStart","querySelector","onCompositionEnd","onFocus","isSelected","parentElement","closest","window","queueMicrotask","onClick","target","textContent","isContentEditable","containsNode","range","createRange","nodeToSelect","selectNode","removeAllRanges","addRange","onFocusIn","relatedTarget","tagName","isRangeEqual","getRange","rangeCount","getRangeAt","onDown","onCancel","onUp","dispatchEvent","Event","useLayoutEffect","useReducer","useMergeRefs","useRegistry","create","RichTextData","apply","useDefaultStyle","useBoundaryStyle","useRichText","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onChange","__unstableDisableFormats","disableFormats","__unstableIsSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","ref","__unstableIsEditableTree","newRecord","prepareEditableTree","__unstableDomOnly","_valueRef","recordRef","setRecordFromProps","fromHTMLString","empty","replacements","Array","hadSelectionUpdateRef","batch","__unstableFormats","__unstableText","applyFromProps","didMountRef","focus","mergedRefs","getValue","__experimentalRichText","deprecated","getActiveFormat","useAnchorRef","settings","since","alternative","className","name","activeFormat","startContainer","nextElementSibling","parentNode","usePrevious","useState","getFormatElement","editableContentElement","TEXT_NODE","startOffset","nextSibling","firstChild","selector","matches","createVirtualAnchorElement","contextElement","getBoundingClientRect","getAnchor","formatElement","useAnchor","isActive","anchor","setAnchor","wasActive","callback","attach","detach","useEffect","activeReplacement","boundarySelector","computedStyle","newColor","color","rule","style","globalStyleId","globalStyle","getElementById","createElement","id","head","appendChild","innerHTML","useCallback","whiteSpace","minWidth","mergePair","a","b","concat","values","reduce","implementation","body","createHTMLDocument","select","store","richTextStore","OBJECT_REPLACEMENT_CHARACTER","ZWNBSP","createEmptyValue","toFormat","attributes","formatType","class","getFormatTypeForClassName","trim","getFormatTypeForBareElement","__experimentalCreatePrepareEditableTree","__experimentalCreateOnChangeEditableValue","registeredAttributes","unregisteredAttributes","_attributes","key","contenteditable","fromPlainText","fromHTMLElement","htmlElement","options","collapseWhiteSpace","richTextData","Object","defineProperty","constructor","init","toPlainText","originalHTML","valueOf","toString","toJSON","getOwnPropertyNames","String","prototype","hasOwnProperty","args","isEditableTree","document","createFromElement","accumulateSelection","accumulator","node","endContainer","endOffset","currentLength","filterRange","nodeValue","isRoot","clone","cloneNode","normalize","from","i","nodes","newNodeValue","test","startsWith","endsWith","CARRIAGE_RETURN","removeReservedCharacters","string","RegExp","hasChildNodes","nodeName","toLowerCase","getAttribute","encodeURIComponent","getAttributes","mergeFormats","hasAttributes","safeName","isFormatEqual","selectedFormats","_activeFormats","formatsAtIndex","ii","_format","getActiveObject","getFormatType","insert","insertObject","formatToInsert","valueToInsert","isEmpty","format1","format2","attributes1","attributes2","keys1","keys","keys2","join","separator","accumlator","formatsAtPreviousIndex","newFormatsAtIndex","formatIndex","previousFormat","dispatch","registerFormatType","console","error","formatTypeForBareElement","formatTypeForClassName","title","keywords","addFormatTypes","removeFormat","newFormat","filterFormats","pattern","replacement","match","rest","offset","newText","newReplacements","fill","split","splitAtSelection","arguments","nextStart","substring","before","after","formatTypes","isArray","removeFormatTypes","names","createReduxStore","register","reducer","selectors","actions","STORE_NAME","combineReducers","state","action","newFormatTypes","fromEntries","entries","includes","createSelector","getFormatTypes","bareElementTagName","elementClassName","toTree","createPathToNode","rootNode","path","previousSibling","getNodeByPath","shift","append","child","createTextNode","setAttribute","appendText","appendData","getLastChild","lastChild","getParent","isText","getText","removeChild","toDom","doc","startPath","endPath","createEmpty","tree","onStartIndex","pointer","onEndIndex","applyValue","applySelection","future","futureChild","currentChild","isEqualNode","data","replaceChild","currentAttributes","futureAttributes","removeAttribute","setStart","setEnd","HTMLElement","escapeEditableHTML","escapeAttribute","isValidAttributeName","createChildrenHTML","children","parent","object","push","createElementHTML","attributeString","restoreOnAttributes","newAttributes","newKey","fromFormat","boundaryClass","elementAttributes","isEqualUntil","formatsLength","deepestActiveFormat","lastCharacterFormats","lastCharacter","character","charAt","shouldInsertPadding","characterFormats","newNode","decodeURIComponent","speak","__","sprintf","toggleFormat","unregisterFormatType","oldFormat","min","Math","max","__unstableToDom","__unstableCreateElement","default","__unstableUseRichText"],"sourceRoot":""}