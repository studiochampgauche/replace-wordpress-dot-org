{"version":3,"file":"keyboard-shortcuts.js","mappings":"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,CAAC;EACF,CAAC,EAAE,CAAEb,IAAI,EAAES,UAAU,EAAEC,SAAS,CAAG,CAAC;AACrC;;;;;;;;;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,gBAAgBA,CAAE;EACjCd,IAAI;EACJe,QAAQ;EACRC,WAAW;EACXC,cAAc;EACdC;AACD,CAAC,EAAG;EACH,OAAO;IACNC,IAAI,EAAE,mBAAmB;IACzBnB,IAAI;IACJe,QAAQ;IACRE,cAAc;IACdC,OAAO;IACPF;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,kBAAkBA,CAAEpB,IAAI,EAAG;EAC1C,OAAO;IACNmB,IAAI,EAAE,qBAAqB;IAC3BnB;EACD,CAAC;AACF;;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AAC6D;;AAE7D;AACA;AACA;AACgC;AACK;AACI;AAEzC,MAAM0B,UAAU,GAAG,yBAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM/B,KAAK,GAAG0B,iEAAgB,CAAEK,UAAU,EAAE;EAClDH,OAAO;EACPC,OAAO;EACPC,SAASA,yCAAAA;AACV,CAAE,CAAC;AAEHH,yDAAQ,CAAE3B,KAAM,CAAC;;;;;;;;;;;;;;;AC3BjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4B,OAAOA,CAAEI,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAG;EACtC,QAASA,MAAM,CAACT,IAAI;IACnB,KAAK,mBAAmB;MACvB,OAAO;QACN,GAAGQ,KAAK;QACR,CAAEC,MAAM,CAAC5B,IAAI,GAAI;UAChBe,QAAQ,EAAEa,MAAM,CAACb,QAAQ;UACzBE,cAAc,EAAEW,MAAM,CAACX,cAAc;UACrCC,OAAO,EAAEU,MAAM,CAACV,OAAO;UACvBF,WAAW,EAAEY,MAAM,CAACZ;QACrB;MACD,CAAC;IACF,KAAK,qBAAqB;MACzB,MAAM;QAAE,CAAEY,MAAM,CAAC5B,IAAI,GAAI6B,UAAU;QAAE,GAAGC;MAAe,CAAC,GAAGH,KAAK;MAChE,OAAOG,cAAc;EACvB;EAEA,OAAOH,KAAK;AACb;AAEA,iEAAeJ,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC5BvB;AACA;AACA;AACiD;AAKpB;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMY,WAAW,GAAG,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG;EAC1BC,OAAO,EAAEL,gEAAe;EACxBM,GAAG,EAAEJ,4DAAW;EAChBK,SAAS,EAAEN,kEAAiBA;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,+BAA+BA,CAAErD,QAAQ,EAAEsD,cAAc,EAAG;EACpE,IAAK,CAAEtD,QAAQ,EAAG;IACjB,OAAO,IAAI;EACZ;EAEA,OAAOA,QAAQ,CAACe,QAAQ,GACrBkC,kBAAkB,CAAEK,cAAc,CAAE,CAAEtD,QAAQ,CAACe,QAAQ,CAAE,CACzDf,QAAQ,CAACgB,SACT,CAAC,GACDhB,QAAQ,CAACgB,SAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuC,yBAAyBA,CAAEf,KAAK,EAAE3B,IAAI,EAAG;EACxD,OAAO2B,KAAK,CAAE3B,IAAI,CAAE,GAAG2B,KAAK,CAAE3B,IAAI,CAAE,CAACiB,cAAc,GAAG,IAAI;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0B,yBAAyBA,CACxChB,KAAK,EACL3B,IAAI,EACJyC,cAAc,GAAG,SAAS,EACzB;EACD,MAAMtD,QAAQ,GAAGuD,yBAAyB,CAAEf,KAAK,EAAE3B,IAAK,CAAC;EACzD,OAAOwC,+BAA+B,CAAErD,QAAQ,EAAEsD,cAAe,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,sBAAsBA,CAAEjB,KAAK,EAAE3B,IAAI,EAAG;EACrD,OAAO2B,KAAK,CAAE3B,IAAI,CAAE,GAAG2B,KAAK,CAAE3B,IAAI,CAAE,CAACgB,WAAW,GAAG,IAAI;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6B,kBAAkBA,CAAElB,KAAK,EAAE3B,IAAI,EAAG;EACjD,OAAO2B,KAAK,CAAE3B,IAAI,CAAE,IAAI2B,KAAK,CAAE3B,IAAI,CAAE,CAACkB,OAAO,GAC1CS,KAAK,CAAE3B,IAAI,CAAE,CAACkB,OAAO,GACrBiB,WAAW;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMrC,6BAA6B,GAAGiC,+DAAc,CAC1D,CAAEJ,KAAK,EAAE3B,IAAI,KAAM;EAClB,OAAO,CACN0C,yBAAyB,CAAEf,KAAK,EAAE3B,IAAK,CAAC,EACxC,GAAG6C,kBAAkB,CAAElB,KAAK,EAAE3B,IAAK,CAAC,CACpC,CAAC8C,MAAM,CAAEC,OAAQ,CAAC;AACpB,CAAC,EACD,CAAEpB,KAAK,EAAE3B,IAAI,KAAM,CAAE2B,KAAK,CAAE3B,IAAI,CAAE,CACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgD,gCAAgC,GAAGjB,+DAAc,CAC7D,CAAEJ,KAAK,EAAE3B,IAAI,KAAM;EAClB,OAAOF,6BAA6B,CAAE6B,KAAK,EAAE3B,IAAK,CAAC,CAACiD,GAAG,CACpDC,WAAW,IACZV,+BAA+B,CAAEU,WAAW,EAAE,KAAM,CACtD,CAAC;AACF,CAAC,EACD,CAAEvB,KAAK,EAAE3B,IAAI,KAAM,CAAE2B,KAAK,CAAE3B,IAAI,CAAE,CACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMmD,oBAAoB,GAAGpB,+DAAc,CACjD,CAAEJ,KAAK,EAAEyB,YAAY,KAAM;EAC1B,OAAOC,MAAM,CAACC,OAAO,CAAE3B,KAAM,CAAC,CAC5BmB,MAAM,CAAE,CAAE,GAAI3D,QAAQ,CAAE,KAAMA,QAAQ,CAAC4B,QAAQ,KAAKqC,YAAa,CAAC,CAClEH,GAAG,CAAE,CAAE,CAAEjD,IAAI,CAAE,KAAMA,IAAK,CAAC;AAC9B,CAAC,EACC2B,KAAK,IAAM,CAAEA,KAAK,CACrB,CAAC;;;;;;;;;;;ACtYD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNgC;AAC8B;AACI;AAC4B","sources":["webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/components/@wordpress/keyboard-shortcuts/src/components/shortcut-provider.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/@wordpress/keyboard-shortcuts/src/context.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/hooks/@wordpress/keyboard-shortcuts/src/hooks/use-shortcut-event-match.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/hooks/@wordpress/keyboard-shortcuts/src/hooks/use-shortcut.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/actions.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/index.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/selectors.js","webpack://wp/external window \"ReactJSXRuntime\"","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/keyboard-shortcuts/build-module/@wordpress/keyboard-shortcuts/src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { context } from '../context';\n\nconst { Provider } = context;\n\n/**\n * Handles callbacks added to context by `useShortcut`.\n * Adding a provider allows to register contextual shortcuts\n * that are only active when a certain part of the UI is focused.\n *\n * @param {Object} props Props to pass to `div`.\n *\n * @return {Element} Component.\n */\nexport function ShortcutProvider( props ) {\n\tconst [ keyboardShortcuts ] = useState( () => new Set() );\n\n\tfunction onKeyDown( event ) {\n\t\tif ( props.onKeyDown ) {\n\t\t\tprops.onKeyDown( event );\n\t\t}\n\n\t\tfor ( const keyboardShortcut of keyboardShortcuts ) {\n\t\t\tkeyboardShortcut( event );\n\t\t}\n\t}\n\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<Provider value={ keyboardShortcuts }>\n\t\t\t<div { ...props } onKeyDown={ onKeyDown } />\n\t\t</Provider>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n","/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\nconst globalShortcuts = new Set();\nconst globalListener = ( event ) => {\n\tfor ( const keyboardShortcut of globalShortcuts ) {\n\t\tkeyboardShortcut( event );\n\t}\n};\n\nexport const context = createContext( {\n\tadd: ( shortcut ) => {\n\t\tif ( globalShortcuts.size === 0 ) {\n\t\t\tdocument.addEventListener( 'keydown', globalListener );\n\t\t}\n\t\tglobalShortcuts.add( shortcut );\n\t},\n\tdelete: ( shortcut ) => {\n\t\tglobalShortcuts.delete( shortcut );\n\t\tif ( globalShortcuts.size === 0 ) {\n\t\t\tdocument.removeEventListener( 'keydown', globalListener );\n\t\t}\n\t},\n} );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { isKeyboardEvent } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as keyboardShortcutsStore } from '../store';\n\n/**\n * Returns a function to check if a keyboard event matches a shortcut name.\n *\n * @return {Function} A function to check if a keyboard event matches a\n *                    predefined shortcut combination.\n */\nexport default function useShortcutEventMatch() {\n\tconst { getAllShortcutKeyCombinations } = useSelect(\n\t\tkeyboardShortcutsStore\n\t);\n\n\t/**\n\t * A function to check if a keyboard event matches a predefined shortcut\n\t * combination.\n\t *\n\t * @param {string}        name  Shortcut name.\n\t * @param {KeyboardEvent} event Event to check.\n\t *\n\t * @return {boolean} True if the event matches any shortcuts, false if not.\n\t */\n\tfunction isMatch( name, event ) {\n\t\treturn getAllShortcutKeyCombinations( name ).some(\n\t\t\t( { modifier, character } ) => {\n\t\t\t\treturn isKeyboardEvent[ modifier ]( event, character );\n\t\t\t}\n\t\t);\n\t}\n\n\treturn isMatch;\n}\n","/**\n * WordPress dependencies\n */\nimport { useContext, useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useShortcutEventMatch from './use-shortcut-event-match';\nimport { context } from '../context';\n\n/**\n * Attach a keyboard shortcut handler.\n *\n * @param {string}   name               Shortcut name.\n * @param {Function} callback           Shortcut callback.\n * @param {Object}   options            Shortcut options.\n * @param {boolean}  options.isDisabled Whether to disable to shortut.\n */\nexport default function useShortcut(\n\tname,\n\tcallback,\n\t{ isDisabled = false } = {}\n) {\n\tconst shortcuts = useContext( context );\n\tconst isMatch = useShortcutEventMatch();\n\tconst callbackRef = useRef();\n\n\tuseEffect( () => {\n\t\tcallbackRef.current = callback;\n\t}, [ callback ] );\n\n\tuseEffect( () => {\n\t\tif ( isDisabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction _callback( event ) {\n\t\t\tif ( isMatch( name, event ) ) {\n\t\t\t\tcallbackRef.current( event );\n\t\t\t}\n\t\t}\n\n\t\tshortcuts.add( _callback );\n\t\treturn () => {\n\t\t\tshortcuts.delete( _callback );\n\t\t};\n\t}, [ name, isDisabled, shortcuts ] );\n}\n","/** @typedef {import('@wordpress/keycodes').WPKeycodeModifier} WPKeycodeModifier */\n\n/**\n * Keyboard key combination.\n *\n * @typedef {Object} WPShortcutKeyCombination\n *\n * @property {string}                      character Character.\n * @property {WPKeycodeModifier|undefined} modifier  Modifier.\n */\n\n/**\n * Configuration of a registered keyboard shortcut.\n *\n * @typedef {Object} WPShortcutConfig\n *\n * @property {string}                     name           Shortcut name.\n * @property {string}                     category       Shortcut category.\n * @property {string}                     description    Shortcut description.\n * @property {WPShortcutKeyCombination}   keyCombination Shortcut key combination.\n * @property {WPShortcutKeyCombination[]} [aliases]      Shortcut aliases.\n */\n\n/**\n * Returns an action object used to register a new keyboard shortcut.\n *\n * @param {WPShortcutConfig} config Shortcut config.\n *\n * @example\n *\n *```js\n * import { useEffect } from 'react';\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect, useDispatch } from '@wordpress/data';\n * import { __ } from '@wordpress/i18n';\n *\n * const ExampleComponent = () => {\n *     const { registerShortcut } = useDispatch( keyboardShortcutsStore );\n *\n *     useEffect( () => {\n *         registerShortcut( {\n *             name: 'custom/my-custom-shortcut',\n *             category: 'my-category',\n *             description: __( 'My custom shortcut' ),\n *             keyCombination: {\n *                 modifier: 'primary',\n *                 character: 'j',\n *             },\n *         } );\n *     }, [] );\n *\n *     const shortcut = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getShortcutKeyCombination(\n *                 'custom/my-custom-shortcut'\n *             ),\n *         []\n *     );\n *\n *     return shortcut ? (\n *         <p>{ __( 'Shortcut is registered.' ) }</p>\n *     ) : (\n *         <p>{ __( 'Shortcut is not registered.' ) }</p>\n *     );\n * };\n *```\n * @return {Object} action.\n */\nexport function registerShortcut( {\n\tname,\n\tcategory,\n\tdescription,\n\tkeyCombination,\n\taliases,\n} ) {\n\treturn {\n\t\ttype: 'REGISTER_SHORTCUT',\n\t\tname,\n\t\tcategory,\n\t\tkeyCombination,\n\t\taliases,\n\t\tdescription,\n\t};\n}\n\n/**\n * Returns an action object used to unregister a keyboard shortcut.\n *\n * @param {string} name Shortcut name.\n *\n * @example\n *\n *```js\n * import { useEffect } from 'react';\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect, useDispatch } from '@wordpress/data';\n * import { __ } from '@wordpress/i18n';\n *\n * const ExampleComponent = () => {\n *     const { unregisterShortcut } = useDispatch( keyboardShortcutsStore );\n *\n *     useEffect( () => {\n *         unregisterShortcut( 'core/editor/next-region' );\n *     }, [] );\n *\n *     const shortcut = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getShortcutKeyCombination(\n *                 'core/editor/next-region'\n *             ),\n *         []\n *     );\n *\n *     return shortcut ? (\n *         <p>{ __( 'Shortcut is not unregistered.' ) }</p>\n *     ) : (\n *         <p>{ __( 'Shortcut is unregistered.' ) }</p>\n *     );\n * };\n *```\n * @return {Object} action.\n */\nexport function unregisterShortcut( name ) {\n\treturn {\n\t\ttype: 'UNREGISTER_SHORTCUT',\n\t\tname,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/keyboard-shortcuts';\n\n/**\n * Store definition for the keyboard shortcuts namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\nregister( store );\n","/**\n * Reducer returning the registered shortcuts\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nfunction reducer( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REGISTER_SHORTCUT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.name ]: {\n\t\t\t\t\tcategory: action.category,\n\t\t\t\t\tkeyCombination: action.keyCombination,\n\t\t\t\t\taliases: action.aliases,\n\t\t\t\t\tdescription: action.description,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'UNREGISTER_SHORTCUT':\n\t\t\tconst { [ action.name ]: actionName, ...remainingState } = state;\n\t\t\treturn remainingState;\n\t}\n\n\treturn state;\n}\n\nexport default reducer;\n","/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\nimport {\n\tdisplayShortcut,\n\tshortcutAriaLabel,\n\trawShortcut,\n} from '@wordpress/keycodes';\n\n/** @typedef {import('./actions').WPShortcutKeyCombination} WPShortcutKeyCombination */\n\n/** @typedef {import('@wordpress/keycodes').WPKeycodeHandlerByModifier} WPKeycodeHandlerByModifier */\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array<any>}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Shortcut formatting methods.\n *\n * @property {WPKeycodeHandlerByModifier} display     Display formatting.\n * @property {WPKeycodeHandlerByModifier} rawShortcut Raw shortcut formatting.\n * @property {WPKeycodeHandlerByModifier} ariaLabel   ARIA label formatting.\n */\nconst FORMATTING_METHODS = {\n\tdisplay: displayShortcut,\n\traw: rawShortcut,\n\tariaLabel: shortcutAriaLabel,\n};\n\n/**\n * Returns a string representing the key combination.\n *\n * @param {?WPShortcutKeyCombination} shortcut       Key combination.\n * @param {keyof FORMATTING_METHODS}  representation Type of representation\n *                                                   (display, raw, ariaLabel).\n *\n * @return {string?} Shortcut representation.\n */\nfunction getKeyCombinationRepresentation( shortcut, representation ) {\n\tif ( ! shortcut ) {\n\t\treturn null;\n\t}\n\n\treturn shortcut.modifier\n\t\t? FORMATTING_METHODS[ representation ][ shortcut.modifier ](\n\t\t\t\tshortcut.character\n\t\t  )\n\t\t: shortcut.character;\n}\n\n/**\n * Returns the main key combination for a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { createInterpolateElement } from '@wordpress/element';\n * import { sprintf } from '@wordpress/i18n';\n * const ExampleComponent = () => {\n *     const {character, modifier} = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getShortcutKeyCombination(\n *                 'core/editor/next-region'\n *             ),\n *         []\n *     );\n *\n *     return (\n *         <div>\n *             { createInterpolateElement(\n *                 sprintf(\n *                     'Character: <code>%s</code> / Modifier: <code>%s</code>',\n *                     character,\n *                     modifier\n *                 ),\n *                 {\n *                     code: <code />,\n *                 }\n *             ) }\n *         </div>\n *     );\n * };\n *```\n *\n * @return {WPShortcutKeyCombination?} Key combination.\n */\nexport function getShortcutKeyCombination( state, name ) {\n\treturn state[ name ] ? state[ name ].keyCombination : null;\n}\n\n/**\n * Returns a string representing the main key combination for a given shortcut name.\n *\n * @param {Object}                   state          Global state.\n * @param {string}                   name           Shortcut name.\n * @param {keyof FORMATTING_METHODS} representation Type of representation\n *                                                  (display, raw, ariaLabel).\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { sprintf } from '@wordpress/i18n';\n *\n * const ExampleComponent = () => {\n *     const {display, raw, ariaLabel} = useSelect(\n *         ( select ) =>{\n *             return {\n *                 display: select( keyboardShortcutsStore ).getShortcutRepresentation('core/editor/next-region' ),\n *                 raw: select( keyboardShortcutsStore ).getShortcutRepresentation('core/editor/next-region','raw' ),\n *                 ariaLabel: select( keyboardShortcutsStore ).getShortcutRepresentation('core/editor/next-region', 'ariaLabel')\n *             }\n *         },\n *         []\n *     );\n *\n *     return (\n *         <ul>\n *             <li>{ sprintf( 'display string: %s', display ) }</li>\n *             <li>{ sprintf( 'raw string: %s', raw ) }</li>\n *             <li>{ sprintf( 'ariaLabel string: %s', ariaLabel ) }</li>\n *         </ul>\n *     );\n * };\n *```\n *\n * @return {string?} Shortcut representation.\n */\nexport function getShortcutRepresentation(\n\tstate,\n\tname,\n\trepresentation = 'display'\n) {\n\tconst shortcut = getShortcutKeyCombination( state, name );\n\treturn getKeyCombinationRepresentation( shortcut, representation );\n}\n\n/**\n * Returns the shortcut description given its name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { __ } from '@wordpress/i18n';\n * const ExampleComponent = () => {\n *     const shortcutDescription = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getShortcutDescription( 'core/editor/next-region' ),\n *         []\n *     );\n *\n *     return shortcutDescription ? (\n *         <div>{ shortcutDescription }</div>\n *     ) : (\n *         <div>{ __( 'No description.' ) }</div>\n *     );\n * };\n *```\n * @return {string?} Shortcut description.\n */\nexport function getShortcutDescription( state, name ) {\n\treturn state[ name ] ? state[ name ].description : null;\n}\n\n/**\n * Returns the aliases for a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { createInterpolateElement } from '@wordpress/element';\n * import { sprintf } from '@wordpress/i18n';\n * const ExampleComponent = () => {\n *     const shortcutAliases = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getShortcutAliases(\n *                 'core/editor/next-region'\n *             ),\n *         []\n *     );\n *\n *     return (\n *         shortcutAliases.length > 0 && (\n *             <ul>\n *                 { shortcutAliases.map( ( { character, modifier }, index ) => (\n *                     <li key={ index }>\n *                         { createInterpolateElement(\n *                             sprintf(\n *                                 'Character: <code>%s</code> / Modifier: <code>%s</code>',\n *                                 character,\n *                                 modifier\n *                             ),\n *                             {\n *                                 code: <code />,\n *                             }\n *                         ) }\n *                     </li>\n *                 ) ) }\n *             </ul>\n *         )\n *     );\n * };\n *```\n *\n * @return {WPShortcutKeyCombination[]} Key combinations.\n */\nexport function getShortcutAliases( state, name ) {\n\treturn state[ name ] && state[ name ].aliases\n\t\t? state[ name ].aliases\n\t\t: EMPTY_ARRAY;\n}\n\n/**\n * Returns the shortcuts that include aliases for a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { createInterpolateElement } from '@wordpress/element';\n * import { sprintf } from '@wordpress/i18n';\n *\n * const ExampleComponent = () => {\n *     const allShortcutKeyCombinations = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getAllShortcutKeyCombinations(\n *                 'core/editor/next-region'\n *             ),\n *         []\n *     );\n *\n *     return (\n *         allShortcutKeyCombinations.length > 0 && (\n *             <ul>\n *                 { allShortcutKeyCombinations.map(\n *                     ( { character, modifier }, index ) => (\n *                         <li key={ index }>\n *                             { createInterpolateElement(\n *                                 sprintf(\n *                                     'Character: <code>%s</code> / Modifier: <code>%s</code>',\n *                                     character,\n *                                     modifier\n *                                 ),\n *                                 {\n *                                     code: <code />,\n *                                 }\n *                             ) }\n *                         </li>\n *                     )\n *                 ) }\n *             </ul>\n *         )\n *     );\n * };\n *```\n *\n * @return {WPShortcutKeyCombination[]} Key combinations.\n */\nexport const getAllShortcutKeyCombinations = createSelector(\n\t( state, name ) => {\n\t\treturn [\n\t\t\tgetShortcutKeyCombination( state, name ),\n\t\t\t...getShortcutAliases( state, name ),\n\t\t].filter( Boolean );\n\t},\n\t( state, name ) => [ state[ name ] ]\n);\n\n/**\n * Returns the raw representation of all the keyboard combinations of a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n * import { createInterpolateElement } from '@wordpress/element';\n * import { sprintf } from '@wordpress/i18n';\n *\n * const ExampleComponent = () => {\n *     const allShortcutRawKeyCombinations = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getAllShortcutRawKeyCombinations(\n *                 'core/editor/next-region'\n *             ),\n *         []\n *     );\n *\n *     return (\n *         allShortcutRawKeyCombinations.length > 0 && (\n *             <ul>\n *                 { allShortcutRawKeyCombinations.map(\n *                     ( shortcutRawKeyCombination, index ) => (\n *                         <li key={ index }>\n *                             { createInterpolateElement(\n *                                 sprintf(\n *                                     ' <code>%s</code>',\n *                                     shortcutRawKeyCombination\n *                                 ),\n *                                 {\n *                                     code: <code />,\n *                                 }\n *                             ) }\n *                         </li>\n *                     )\n *                 ) }\n *             </ul>\n *         )\n *     );\n * };\n *```\n *\n * @return {string[]} Shortcuts.\n */\nexport const getAllShortcutRawKeyCombinations = createSelector(\n\t( state, name ) => {\n\t\treturn getAllShortcutKeyCombinations( state, name ).map(\n\t\t\t( combination ) =>\n\t\t\t\tgetKeyCombinationRepresentation( combination, 'raw' )\n\t\t);\n\t},\n\t( state, name ) => [ state[ name ] ]\n);\n\n/**\n * Returns the shortcut names list for a given category name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Category name.\n * @example\n *\n *```js\n * import { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n * import { useSelect } from '@wordpress/data';\n *\n * const ExampleComponent = () => {\n *     const categoryShortcuts = useSelect(\n *         ( select ) =>\n *             select( keyboardShortcutsStore ).getCategoryShortcuts(\n *                 'block'\n *             ),\n *         []\n *     );\n *\n *     return (\n *         categoryShortcuts.length > 0 && (\n *             <ul>\n *                 { categoryShortcuts.map( ( categoryShortcut ) => (\n *                     <li key={ categoryShortcut }>{ categoryShortcut }</li>\n *                 ) ) }\n *             </ul>\n *         )\n *     );\n * };\n *```\n * @return {string[]} Shortcut names.\n */\nexport const getCategoryShortcuts = createSelector(\n\t( state, categoryName ) => {\n\t\treturn Object.entries( state )\n\t\t\t.filter( ( [ , shortcut ] ) => shortcut.category === categoryName )\n\t\t\t.map( ( [ name ] ) => name );\n\t},\n\t( state ) => [ state ]\n);\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"keycodes\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport { default as useShortcut } from './hooks/use-shortcut';\nexport { ShortcutProvider } from './components/shortcut-provider';\nexport { default as __unstableUseShortcutEventMatch } from './hooks/use-shortcut-event-match';\n"],"names":["useState","context","jsx","_jsx","Provider","ShortcutProvider","props","keyboardShortcuts","Set","onKeyDown","event","keyboardShortcut","value","children","createContext","globalShortcuts","globalListener","add","shortcut","size","document","addEventListener","delete","removeEventListener","useSelect","isKeyboardEvent","store","keyboardShortcutsStore","useShortcutEventMatch","getAllShortcutKeyCombinations","isMatch","name","some","modifier","character","useContext","useEffect","useRef","useShortcut","callback","isDisabled","shortcuts","callbackRef","current","_callback","registerShortcut","category","description","keyCombination","aliases","type","unregisterShortcut","createReduxStore","register","reducer","actions","selectors","STORE_NAME","state","action","actionName","remainingState","createSelector","displayShortcut","shortcutAriaLabel","rawShortcut","EMPTY_ARRAY","FORMATTING_METHODS","display","raw","ariaLabel","getKeyCombinationRepresentation","representation","getShortcutKeyCombination","getShortcutRepresentation","getShortcutDescription","getShortcutAliases","filter","Boolean","getAllShortcutRawKeyCombinations","map","combination","getCategoryShortcuts","categoryName","Object","entries","default","__unstableUseShortcutEventMatch"],"sourceRoot":""}