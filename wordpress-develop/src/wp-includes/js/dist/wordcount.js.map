{"version":3,"file":"wordcount.js","mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,eAAe,GAAG;EAC9BC,UAAU,EAAE,oBAAoB;EAChCC,iBAAiB,EAAE,kBAAkB;EACrCC,WAAW,EAAE,iBAAiB;EAC9BC,gBAAgB,EAAE,SAAS;EAE3B;EACAC,eAAe,EAAE,YAAY;EAE7B;EACAC,YAAY,EAAE,IAAIC,MAAM,CACvB,CACC,GAAG;EAEH;EACA,sDAAsD;EAEtD;EACA,2BAA2B;EAE3B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACG,eAAe;EAEf;EACA,eAAe,EACf,GAAG,CACH,CAACC,IAAI,CAAE,EAAG,CAAC,EACZ,GACD,CAAC;EAED;EACAC,YAAY,EAAE,iCAAiC;EAC/CC,WAAW,EAAE,QAAQ;EACrBC,iCAAiC,EAAE,KAAK;EAExC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,iCAAiC,EAAE,kCAAkC;EACrEC,IAAI,EAAE;IACLC,IAAI,EAAE;EACP;AACD,CAAC;;;;;;;;;;;;;;;ACjHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,eAAeA,CAAEC,QAAQ,EAAEC,IAAI,EAAG;EACzD,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACX,eAAe,EAAE,GAAI,CAAC;AACrD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASc,iBAAiBA,CAAEH,QAAQ,EAAEC,IAAI,EAAG;EAC3D,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACd,iBAAiB,EAAE,EAAG,CAAC;AACtD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASkB,iBAAiBA,CAAEJ,QAAQ,EAAEC,IAAI,EAAG;EAC3D,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACZ,gBAAgB,EAAE,EAAG,CAAC;AACrD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASiB,eAAeA,CAAEL,QAAQ,EAAEC,IAAI,EAAG;EACzD,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACV,YAAY,EAAE,EAAG,CAAC;AACjD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASgB,eAAeA,CAAEN,QAAQ,EAAEC,IAAI,EAAG;EACzD,IAAKD,QAAQ,CAACO,gBAAgB,EAAG;IAChC,OAAON,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACO,gBAAgB,EAAE,IAAK,CAAC;EACvD;EACA,OAAON,IAAI;AACZ;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASO,WAAWA,CAAER,QAAQ,EAAEC,IAAI,EAAG;EACrD,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACb,WAAW,EAAE,GAAI,CAAC;AACjD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASsB,SAASA,CAAET,QAAQ,EAAEC,IAAI,EAAG;EACnD,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACf,UAAU,EAAE,IAAK,CAAC;AACjD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASyB,+BAA+BA,CAAEV,QAAQ,EAAEC,IAAI,EAAG;EACzE,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACP,YAAY,EAAE,GAAI,CAAC;AAClD;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASkB,qCAAqCA,CAC5DX,QAAQ,EACRC,IAAI,EACH;EACD,OAAOA,IAAI,CAACC,OAAO,CAAEF,QAAQ,CAACZ,gBAAgB,EAAE,GAAI,CAAC;AACtD;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACoD;AAChB;AAC4C;AAC5B;AACJ;AACA;AACI;AACJ;AACR;AACoD;;AAE5F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwB,YAAYA,CAAEd,IAAI,EAAEe,YAAY,EAAG;EAAA,IAAAC,qBAAA;EAC3C,MAAMd,QAAQ,GAAGe,MAAM,CAACC,MAAM,CAAE,CAAC,CAAC,EAAEhC,6DAAe,EAAE6B,YAAa,CAAC;EAEnEb,QAAQ,CAACiB,UAAU,IAAAH,qBAAA,GAAGd,QAAQ,CAACH,IAAI,EAAEoB,UAAU,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EAErD,IAAKd,QAAQ,CAACiB,UAAU,IAAIjB,QAAQ,CAACiB,UAAU,CAACC,MAAM,EAAG;IACxDlB,QAAQ,CAACO,gBAAgB,GAAG,IAAIhB,MAAM,CACrC,YAAY,GAAGS,QAAQ,CAACiB,UAAU,CAACzB,IAAI,CAAE,GAAI,CAAC,GAAG,cAAc,EAC/D,GACD,CAAC;EACF;EAEAQ,QAAQ,CAACF,IAAI,GAAGA,IAAI;EAEpB,IACCE,QAAQ,CAACF,IAAI,KAAK,6BAA6B,IAC/CE,QAAQ,CAACF,IAAI,KAAK,6BAA6B,EAC9C;IACDE,QAAQ,CAACF,IAAI,GAAG,OAAO;EACxB;EAEA,OAAOE,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmB,UAAUA,CAAElB,IAAI,EAAEmB,KAAK,EAAEpB,QAAQ,EAAG;EAAA,IAAAqB,kBAAA;EAC5CpB,IAAI,GAAG,CACNQ,kDAAS,CAACa,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EAChCG,0DAAiB,CAACmB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACxCM,wDAAe,CAACgB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACtCQ,oDAAW,CAACc,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EAClCI,0DAAiB,CAACkB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACxCD,wDAAe,CAACuB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACtCK,wDAAe,CAACiB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,CACtC,CAACuB,MAAM,CAAE,CAAEC,MAAM,EAAEC,EAAE,KAAMA,EAAE,CAAED,MAAO,CAAC,EAAEvB,IAAK,CAAC;EAChDA,IAAI,GAAGA,IAAI,GAAG,IAAI;EAClB,QAAAoB,kBAAA,GAAOpB,IAAI,CAACyB,KAAK,CAAEN,KAAM,CAAC,EAAEF,MAAM,cAAAG,kBAAA,cAAAA,kBAAA,GAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,eAAeA,CAAE1B,IAAI,EAAEmB,KAAK,EAAEpB,QAAQ,EAAG;EAAA,IAAA4B,mBAAA;EACjD3B,IAAI,GAAG,CACNQ,kDAAS,CAACa,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EAChCG,0DAAiB,CAACmB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACxCM,wDAAe,CAACgB,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACtCU,wEAA+B,CAACY,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EACtDQ,oDAAW,CAACc,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,EAClCW,8EAAqC,CAACW,IAAI,CAAE,IAAI,EAAEtB,QAAS,CAAC,CAC5D,CAACuB,MAAM,CAAE,CAAEC,MAAM,EAAEC,EAAE,KAAMA,EAAE,CAAED,MAAO,CAAC,EAAEvB,IAAK,CAAC;EAChDA,IAAI,GAAGA,IAAI,GAAG,IAAI;EAClB,QAAA2B,mBAAA,GAAO3B,IAAI,CAACyB,KAAK,CAAEN,KAAM,CAAC,EAAEF,MAAM,cAAAU,mBAAA,cAAAA,mBAAA,GAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAAE5B,IAAI,EAAEH,IAAI,EAAEe,YAAY,EAAG;EACjD,MAAMb,QAAQ,GAAGY,YAAY,CAAEd,IAAI,EAAEe,YAAa,CAAC;EACnD,IAAIiB,WAAW;EACf,QAAS9B,QAAQ,CAACF,IAAI;IACrB,KAAK,OAAO;MACXgC,WAAW,GAAG9B,QAAQ,CAACN,WAAW;MAClC,OAAOyB,UAAU,CAAElB,IAAI,EAAE6B,WAAW,EAAE9B,QAAS,CAAC;IACjD,KAAK,6BAA6B;MACjC8B,WAAW,GAAG9B,QAAQ,CAACJ,iCAAiC;MACxD,OAAO+B,eAAe,CAAE1B,IAAI,EAAE6B,WAAW,EAAE9B,QAAS,CAAC;IACtD,KAAK,6BAA6B;MACjC8B,WAAW,GAAG9B,QAAQ,CAACL,iCAAiC;MACxD,OAAOgC,eAAe,CAAE1B,IAAI,EAAE6B,WAAW,EAAE9B,QAAS,CAAC;IACtD;MACC,OAAO,CAAC;EACV;AACD","sources":["webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/defaultSettings.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripConnectors.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripHTMLComments.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripHTMLEntities.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripRemovables.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripShortcodes.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripSpaces.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripTags.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/transposeAstralsToCountableChar.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/transposeHTMLEntitiesToCountableChars.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/index.js"],"sourcesContent":["/** @typedef {import('./index').WPWordCountStrategy} WPWordCountStrategy */\n\n/** @typedef {Partial<{type: WPWordCountStrategy, shortcodes: string[]}>} WPWordCountL10n */\n\n/**\n * @typedef WPWordCountSettingsFields\n * @property {RegExp}              HTMLRegExp                        Regular expression that matches HTML tags\n * @property {RegExp}              HTMLcommentRegExp                 Regular expression that matches HTML comments\n * @property {RegExp}              spaceRegExp                       Regular expression that matches spaces in HTML\n * @property {RegExp}              HTMLEntityRegExp                  Regular expression that matches HTML entities\n * @property {RegExp}              connectorRegExp                   Regular expression that matches word connectors, like em-dash\n * @property {RegExp}              removeRegExp                      Regular expression that matches various characters to be removed when counting\n * @property {RegExp}              astralRegExp                      Regular expression that matches astral UTF-16 code points\n * @property {RegExp}              wordsRegExp                       Regular expression that matches words\n * @property {RegExp}              characters_excluding_spacesRegExp Regular expression that matches characters excluding spaces\n * @property {RegExp}              characters_including_spacesRegExp Regular expression that matches characters including spaces\n * @property {RegExp}              shortcodesRegExp                  Regular expression that matches WordPress shortcodes\n * @property {string[]}            shortcodes                        List of all shortcodes\n * @property {WPWordCountStrategy} type                              Describes what and how are we counting\n * @property {WPWordCountL10n}     l10n                              Object with human translations\n */\n\n/**\n * Lower-level settings for word counting that can be overridden.\n *\n * @typedef {Partial<WPWordCountSettingsFields>} WPWordCountUserSettings\n */\n\n// Disable reason: JSDoc linter doesn't seem to parse the union (`&`) correctly: https://github.com/jsdoc/jsdoc/issues/1285\n/* eslint-disable jsdoc/valid-types */\n/**\n * Word counting settings that include non-optional values we set if missing\n *\n * @typedef {WPWordCountUserSettings & typeof defaultSettings} WPWordCountDefaultSettings\n */\n/* eslint-enable jsdoc/valid-types */\n\nexport const defaultSettings = {\n\tHTMLRegExp: /<\\/?[a-z][^>]*?>/gi,\n\tHTMLcommentRegExp: /<!--[\\s\\S]*?-->/g,\n\tspaceRegExp: /&nbsp;|&#160;/gi,\n\tHTMLEntityRegExp: /&\\S+?;/g,\n\n\t// \\u2014 = em-dash.\n\tconnectorRegExp: /--|\\u2014/g,\n\n\t// Characters to be removed from input text.\n\tremoveRegExp: new RegExp(\n\t\t[\n\t\t\t'[',\n\n\t\t\t// Basic Latin (extract)\n\t\t\t'\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E',\n\n\t\t\t// Latin-1 Supplement (extract)\n\t\t\t'\\u0080-\\u00BF\\u00D7\\u00F7',\n\n\t\t\t/*\n\t\t\t * The following range consists of:\n\t\t\t * General Punctuation\n\t\t\t * Superscripts and Subscripts\n\t\t\t * Currency Symbols\n\t\t\t * Combining Diacritical Marks for Symbols\n\t\t\t * Letterlike Symbols\n\t\t\t * Number Forms\n\t\t\t * Arrows\n\t\t\t * Mathematical Operators\n\t\t\t * Miscellaneous Technical\n\t\t\t * Control Pictures\n\t\t\t * Optical Character Recognition\n\t\t\t * Enclosed Alphanumerics\n\t\t\t * Box Drawing\n\t\t\t * Block Elements\n\t\t\t * Geometric Shapes\n\t\t\t * Miscellaneous Symbols\n\t\t\t * Dingbats\n\t\t\t * Miscellaneous Mathematical Symbols-A\n\t\t\t * Supplemental Arrows-A\n\t\t\t * Braille Patterns\n\t\t\t * Supplemental Arrows-B\n\t\t\t * Miscellaneous Mathematical Symbols-B\n\t\t\t * Supplemental Mathematical Operators\n\t\t\t * Miscellaneous Symbols and Arrows\n\t\t\t */\n\t\t\t'\\u2000-\\u2BFF',\n\n\t\t\t// Supplemental Punctuation.\n\t\t\t'\\u2E00-\\u2E7F',\n\t\t\t']',\n\t\t].join( '' ),\n\t\t'g'\n\t),\n\n\t// Remove UTF-16 surrogate points, see https://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF\n\tastralRegExp: /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n\twordsRegExp: /\\S\\s+/g,\n\tcharacters_excluding_spacesRegExp: /\\S/g,\n\n\t/*\n\t * Match anything that is not a formatting character, excluding:\n\t * \\f = form feed\n\t * \\n = new line\n\t * \\r = carriage return\n\t * \\t = tab\n\t * \\v = vertical tab\n\t * \\u00AD = soft hyphen\n\t * \\u2028 = line separator\n\t * \\u2029 = paragraph separator\n\t */\n\tcharacters_including_spacesRegExp: /[^\\f\\n\\r\\t\\v\\u00AD\\u2028\\u2029]/g,\n\tl10n: {\n\t\ttype: 'words',\n\t},\n};\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripConnectors( settings, text ) {\n\treturn text.replace( settings.connectorRegExp, ' ' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLComments( settings, text ) {\n\treturn text.replace( settings.HTMLcommentRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLEntities( settings, text ) {\n\treturn text.replace( settings.HTMLEntityRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripRemovables( settings, text ) {\n\treturn text.replace( settings.removeRegExp, '' );\n}\n","/**\n * Replaces items matched in the regex with a new line.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripShortcodes( settings, text ) {\n\tif ( settings.shortcodesRegExp ) {\n\t\treturn text.replace( settings.shortcodesRegExp, '\\n' );\n\t}\n\treturn text;\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripSpaces( settings, text ) {\n\treturn text.replace( settings.spaceRegExp, ' ' );\n}\n","/**\n * Replaces items matched in the regex with new line\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripTags( settings, text ) {\n\treturn text.replace( settings.HTMLRegExp, '\\n' );\n}\n","/**\n * Replaces items matched in the regex with character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeAstralsToCountableChar( settings, text ) {\n\treturn text.replace( settings.astralRegExp, 'a' );\n}\n","/**\n * Replaces items matched in the regex with a single character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeHTMLEntitiesToCountableChars(\n\tsettings,\n\ttext\n) {\n\treturn text.replace( settings.HTMLEntityRegExp, 'a' );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Internal dependencies\n */\nimport { defaultSettings } from './defaultSettings';\nimport stripTags from './stripTags';\nimport transposeAstralsToCountableChar from './transposeAstralsToCountableChar';\nimport stripHTMLEntities from './stripHTMLEntities';\nimport stripConnectors from './stripConnectors';\nimport stripRemovables from './stripRemovables';\nimport stripHTMLComments from './stripHTMLComments';\nimport stripShortcodes from './stripShortcodes';\nimport stripSpaces from './stripSpaces';\nimport transposeHTMLEntitiesToCountableChars from './transposeHTMLEntitiesToCountableChars';\n\n/**\n * @typedef {import('./defaultSettings').WPWordCountDefaultSettings}  WPWordCountSettings\n * @typedef {import('./defaultSettings').WPWordCountUserSettings}     WPWordCountUserSettings\n */\n\n/**\n * Possible ways of counting.\n *\n * @typedef {'words'|'characters_excluding_spaces'|'characters_including_spaces'} WPWordCountStrategy\n */\n\n/**\n * Private function to manage the settings.\n *\n * @param {WPWordCountStrategy}     type         The type of count to be done.\n * @param {WPWordCountUserSettings} userSettings Custom settings for the count.\n *\n * @return {WPWordCountSettings} The combined settings object to be used.\n */\nfunction loadSettings( type, userSettings ) {\n\tconst settings = Object.assign( {}, defaultSettings, userSettings );\n\n\tsettings.shortcodes = settings.l10n?.shortcodes ?? [];\n\n\tif ( settings.shortcodes && settings.shortcodes.length ) {\n\t\tsettings.shortcodesRegExp = new RegExp(\n\t\t\t'\\\\[\\\\/?(?:' + settings.shortcodes.join( '|' ) + ')[^\\\\]]*?\\\\]',\n\t\t\t'g'\n\t\t);\n\t}\n\n\tsettings.type = type;\n\n\tif (\n\t\tsettings.type !== 'characters_excluding_spaces' &&\n\t\tsettings.type !== 'characters_including_spaces'\n\t) {\n\t\tsettings.type = 'words';\n\t}\n\n\treturn settings;\n}\n\n/**\n * Count the words in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of words.\n */\nfunction countWords( text, regex, settings ) {\n\ttext = [\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\tstripHTMLEntities.bind( null, settings ),\n\t\tstripConnectors.bind( null, settings ),\n\t\tstripRemovables.bind( null, settings ),\n\t].reduce( ( result, fn ) => fn( result ), text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count the characters in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of characters.\n */\nfunction countCharacters( text, regex, settings ) {\n\ttext = [\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\ttransposeAstralsToCountableChar.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\ttransposeHTMLEntitiesToCountableChars.bind( null, settings ),\n\t].reduce( ( result, fn ) => fn( result ), text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count some words.\n *\n * @param {string}                  text         The text being processed\n * @param {WPWordCountStrategy}     type         The type of count. Accepts 'words', 'characters_excluding_spaces', or 'characters_including_spaces'.\n * @param {WPWordCountUserSettings} userSettings Custom settings object.\n *\n * @example\n * ```js\n * import { count } from '@wordpress/wordcount';\n * const numberOfWords = count( 'Words to count', 'words', {} )\n * ```\n *\n * @return {number} The word or character count.\n */\nexport function count( text, type, userSettings ) {\n\tconst settings = loadSettings( type, userSettings );\n\tlet matchRegExp;\n\tswitch ( settings.type ) {\n\t\tcase 'words':\n\t\t\tmatchRegExp = settings.wordsRegExp;\n\t\t\treturn countWords( text, matchRegExp, settings );\n\t\tcase 'characters_including_spaces':\n\t\t\tmatchRegExp = settings.characters_including_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tcase 'characters_excluding_spaces':\n\t\t\tmatchRegExp = settings.characters_excluding_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n"],"names":["defaultSettings","HTMLRegExp","HTMLcommentRegExp","spaceRegExp","HTMLEntityRegExp","connectorRegExp","removeRegExp","RegExp","join","astralRegExp","wordsRegExp","characters_excluding_spacesRegExp","characters_including_spacesRegExp","l10n","type","stripConnectors","settings","text","replace","stripHTMLComments","stripHTMLEntities","stripRemovables","stripShortcodes","shortcodesRegExp","stripSpaces","stripTags","transposeAstralsToCountableChar","transposeHTMLEntitiesToCountableChars","loadSettings","userSettings","_settings$l10n$shortc","Object","assign","shortcodes","length","countWords","regex","_text$match$length","bind","reduce","result","fn","match","countCharacters","_text$match$length2","count","matchRegExp"],"sourceRoot":""}